{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react\\\\project1\\\\src\\\\components\\\\profile\\\\MyPosts\\\\MyPosts.jsx\";\nimport so from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { maxLengthCreator, requered } from './../../../utials/validators/validators';\nimport { Textaria } from './../../common/formsControls/formsControsl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength10 = maxLengthCreator(10);\nconst MyPostsForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      component: Textaria,\n      name: \"post\",\n      placeholder: \"\\u041F\\u043E\\u0441\\u0442\",\n      value: this.props.newPostText,\n      validate: [requered, maxLength10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = MyPostsForm;\nconst MyPostsReduxForm = reduxForm({\n  form: 'ProfileAddPostForm'\n})(MyPostsForm);\n_c2 = MyPostsReduxForm;\nclass MyPosts extends React.Component {\n  render() {\n    console.log('RENDER');\n    let postsElements = this.props.posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      message: post.message,\n      likecount: post.likesCount\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 55\n    }, this));\n    const onSubmit = formData => {\n      this.props.addPost(formData.post);\n    };\n    newPostElement = /*#__PURE__*/React.createRef();\n    onAddPosts = () => {\n      this.props.addPost();\n    };\n    onPostChange = () => {\n      let text = newPostElement.current.value;\n      this.props.updateNewPostText(text);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: so.postsBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"My posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyPostsReduxForm, {\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: so.posts,\n        children: postsElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default MyPosts;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyPostsForm\");\n$RefreshReg$(_c2, \"MyPostsReduxForm\");","map":{"version":3,"names":["so","Post","React","reduxForm","Field","maxLengthCreator","requered","Textaria","maxLength10","MyPostsForm","props","handleSubmit","newPostText","MyPostsReduxForm","form","MyPosts","Component","render","console","log","postsElements","posts","map","post","message","likesCount","id","onSubmit","formData","addPost","newPostElement","createRef","onAddPosts","onPostChange","text","current","value","updateNewPostText","postsBlock"],"sources":["C:/Dev/react/project1/src/components/profile/MyPosts/MyPosts.jsx"],"sourcesContent":["import so from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react';\r\nimport {reduxForm,Field} from 'redux-form'\r\nimport {maxLengthCreator, requered} from './../../../utials/validators/validators'\r\nimport {Textaria} from './../../common/formsControls/formsControsl'\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textaria} name='post' placeholder='Пост' value={this.props.newPostText} validate={[requered,maxLength10]} />\r\n            <br />\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({\r\n    form:'ProfileAddPostForm'\r\n})(MyPostsForm)\r\n\r\n\r\nclass MyPosts extends React.Component {\r\n\r\n    render () {\r\n        console.log('RENDER')\r\n    let postsElements = this.props.posts.map( post => <Post message={post.message} key={post.id} likecount={post.likesCount}/>)\r\n    const onSubmit = (formData) => {\r\n        this.props.addPost(formData.post)\r\n    }\r\n\r\n     \r\n    newPostElement = React.createRef();\r\n   \r\n    onAddPosts = () => { \r\n        this.props.addPost()\r\n    }\r\n    \r\n    onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        this.props.updateNewPostText(text);\r\n    }\r\n        return (\r\n            <div className={so.postsBlock}>\r\n                <div>\r\n                    My posts\r\n                </div>\r\n                    <MyPostsReduxForm onSubmit={onSubmit}/>\r\n                <div className={so.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MyPosts"],"mappings":";AAAA,OAAOA,EAAE,MAAM,sBAAsB;AACrC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAACC,KAAK,QAAO,YAAY;AAC1C,SAAQC,gBAAgB,EAAEC,QAAQ,QAAO,yCAAyC;AAClF,SAAQC,QAAQ,QAAO,4CAA4C;AAAA;AAEnE,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,EAAE,CAAC;AACxC,MAAMI,WAAW,GAAIC,KAAK,IAAK;EAC3B,oBACI;IAAM,QAAQ,EAAEA,KAAK,CAACC,YAAa;IAAA,wBAC/B,QAAC,KAAK;MAAC,SAAS,EAAEJ,QAAS;MAAC,IAAI,EAAC,MAAM;MAAC,WAAW,EAAC,0BAAM;MAAC,KAAK,EAAE,IAAI,CAACG,KAAK,CAACE,WAAY;MAAC,QAAQ,EAAE,CAACN,QAAQ,EAACE,WAAW;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAC9H;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,UAAQ;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACtB;AAEf,CAAC;AAAA,KARKC,WAAW;AAUjB,MAAMI,gBAAgB,GAAGV,SAAS,CAAC;EAC/BW,IAAI,EAAC;AACT,CAAC,CAAC,CAACL,WAAW,CAAC;AAAA,MAFTI,gBAAgB;AAKtB,MAAME,OAAO,SAASb,KAAK,CAACc,SAAS,CAAC;EAElCC,MAAM,GAAI;IACNC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACzB,IAAIC,aAAa,GAAG,IAAI,CAACV,KAAK,CAACW,KAAK,CAACC,GAAG,CAAEC,IAAI,iBAAI,QAAC,IAAI;MAAC,OAAO,EAAEA,IAAI,CAACC,OAAQ;MAAe,SAAS,EAAED,IAAI,CAACE;IAAW,GAApCF,IAAI,CAACG,EAAE;MAAA;MAAA;MAAA;IAAA,QAA+B,CAAC;IAC3H,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;MAC3B,IAAI,CAAClB,KAAK,CAACmB,OAAO,CAACD,QAAQ,CAACL,IAAI,CAAC;IACrC,CAAC;IAGDO,cAAc,gBAAG5B,KAAK,CAAC6B,SAAS,EAAE;IAElCC,UAAU,GAAG,MAAM;MACf,IAAI,CAACtB,KAAK,CAACmB,OAAO,EAAE;IACxB,CAAC;IAEDI,YAAY,GAAG,MAAM;MACjB,IAAIC,IAAI,GAAGJ,cAAc,CAACK,OAAO,CAACC,KAAK;MACvC,IAAI,CAAC1B,KAAK,CAAC2B,iBAAiB,CAACH,IAAI,CAAC;IACtC,CAAC;IACG,oBACI;MAAK,SAAS,EAAElC,EAAE,CAACsC,UAAW;MAAA,wBAC1B;QAAA,UAAK;MAEL;QAAA;QAAA;QAAA;MAAA,QAAM,eACF,QAAC,gBAAgB;QAAC,QAAQ,EAAEX;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE,eAC3C;QAAK,SAAS,EAAE3B,EAAE,CAACqB,KAAM;QAAA,UACpBD;MAAa;QAAA;QAAA;QAAA;MAAA,QACZ;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAEd;AACJ;AACA,eAAeL,OAAO;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}