{"ast":null,"code":"let websocket;\nconst closeHanbler = () => {\n  setTimeout(createChannel, 3000);\n};\nconst messageHandler = e => {\n  let newMessages = JSON.parse(e.data);\n  subcribers.forEach(s => s(newMessages));\n};\nfunction createChannel() {\n  var _websocket, _websocket2;\n  (_websocket = websocket) === null || _websocket === void 0 ? void 0 : _websocket.removeEventListener('close', closeHanbler);\n  (_websocket2 = websocket) === null || _websocket2 === void 0 ? void 0 : _websocket2.close();\n  websocket = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\n  websocket.addEventListener('close', closeHanbler);\n  websocket.addEventListener('message', messageHandler);\n}\nlet subcribers = [];\nexport const chatAPI = {\n  subscribe(callback) {\n    subcribers.push(callback);\n    return () => {\n      subcribers = subcribers.filter(s => s !== callback);\n    };\n  },\n  unsubscribe(callback) {\n    subcribers = subcribers.filter(s => s !== callback);\n  },\n  sendMessage(message) {\n    websocket.send(message);\n  }\n};","map":{"version":3,"names":["websocket","closeHanbler","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","data","subcribers","forEach","s","removeEventListener","close","WebSocket","addEventListener","chatAPI","subscribe","callback","push","filter","unsubscribe","sendMessage","message","send"],"sources":["C:/Dev/react/project1/src/components/api/chat-api.ts"],"sourcesContent":["export type ChatMessageType = {\r\n    message:string\r\n    photo:string\r\n    userId:number\r\n    userName:string\r\n}\r\ntype SubscriberType = (messages:ChatMessageType[]) => void\r\n\r\n\r\nlet websocket:WebSocket\r\nconst closeHanbler = () => {\r\n    setTimeout(createChannel,3000)\r\n}\r\nconst messageHandler = (e:MessageEvent) => {\r\n    let newMessages = JSON.parse(e.data)\r\n    subcribers.forEach(s => s(newMessages))\r\n}\r\nfunction createChannel() {\r\n    websocket?.removeEventListener('close',closeHanbler)\r\n    websocket?.close()\r\n    websocket = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    websocket.addEventListener('close',closeHanbler) \r\n    websocket.addEventListener('message',messageHandler) \r\n}  \r\n\r\nlet subcribers = [] as Array<SubscriberType>\r\nexport const chatAPI = {\r\n    \r\n    subscribe(callback:SubscriberType) {\r\n        subcribers.push(callback)\r\n        return () => {\r\n            subcribers = subcribers.filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(callback:SubscriberType) {\r\n        subcribers = subcribers.filter(s => s !== callback)\r\n    },\r\n    sendMessage(message:string) {\r\n        websocket.send(message)\r\n    }\r\n}\r\n\r\n"],"mappings":"AASA,IAAIA,SAAmB;AACvB,MAAMC,YAAY,GAAG,MAAM;EACvBC,UAAU,CAACC,aAAa,EAAC,IAAI,CAAC;AAClC,CAAC;AACD,MAAMC,cAAc,GAAIC,CAAc,IAAK;EACvC,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,CAACI,IAAI,CAAC;EACpCC,UAAU,CAACC,OAAO,CAACC,CAAC,IAAIA,CAAC,CAACN,WAAW,CAAC,CAAC;AAC3C,CAAC;AACD,SAASH,aAAa,GAAG;EAAA;EACrB,cAAAH,SAAS,+CAAT,WAAWa,mBAAmB,CAAC,OAAO,EAACZ,YAAY,CAAC;EACpD,eAAAD,SAAS,gDAAT,YAAWc,KAAK,EAAE;EAClBd,SAAS,GAAG,IAAIe,SAAS,CAAC,8DAA8D,CAAC;EACzFf,SAAS,CAACgB,gBAAgB,CAAC,OAAO,EAACf,YAAY,CAAC;EAChDD,SAAS,CAACgB,gBAAgB,CAAC,SAAS,EAACZ,cAAc,CAAC;AACxD;AAEA,IAAIM,UAAU,GAAG,EAA2B;AAC5C,OAAO,MAAMO,OAAO,GAAG;EAEnBC,SAAS,CAACC,QAAuB,EAAE;IAC/BT,UAAU,CAACU,IAAI,CAACD,QAAQ,CAAC;IACzB,OAAO,MAAM;MACTT,UAAU,GAAGA,UAAU,CAACW,MAAM,CAACT,CAAC,IAAIA,CAAC,KAAKO,QAAQ,CAAC;IACvD,CAAC;EACL,CAAC;EACDG,WAAW,CAACH,QAAuB,EAAE;IACjCT,UAAU,GAAGA,UAAU,CAACW,MAAM,CAACT,CAAC,IAAIA,CAAC,KAAKO,QAAQ,CAAC;EACvD,CAAC;EACDI,WAAW,CAACC,OAAc,EAAE;IACxBxB,SAAS,CAACyB,IAAI,CAACD,OAAO,CAAC;EAC3B;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}