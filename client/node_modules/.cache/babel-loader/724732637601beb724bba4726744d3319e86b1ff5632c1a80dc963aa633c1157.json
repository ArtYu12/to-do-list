{"ast":null,"code":"import axios from \"axios\";\nexport const instanse = axios.create({\n  withCredentials: true,\n  headers: {\n    'API-KEY': 'cafd4f76-51d0-40a7-93fa-907a2586d1e6'\n  },\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/'\n});\nexport let ResultCodeEnum;\n(function (ResultCodeEnum) {\n  ResultCodeEnum[ResultCodeEnum[\"Success\"] = 0] = \"Success\";\n  ResultCodeEnum[ResultCodeEnum[\"Error\"] = 0] = \"Error\";\n})(ResultCodeEnum || (ResultCodeEnum = {}));\nexport let ResultCodeWithCaptchaEnum;\n(function (ResultCodeWithCaptchaEnum) {\n  ResultCodeWithCaptchaEnum[ResultCodeWithCaptchaEnum[\"CaptchaIsRequired\"] = 10] = \"CaptchaIsRequired\";\n})(ResultCodeWithCaptchaEnum || (ResultCodeWithCaptchaEnum = {}));\nexport const authAPI = {\n  getData() {\n    return instanse.get(`auth/me`).then(response => response.data);\n  },\n  login(email, password) {\n    let rememberMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let captcha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    return instanse.post(`auth/login`, {\n      email,\n      password,\n      rememberMe,\n      captcha\n    }).then(res => res.data);\n  },\n  loginout() {\n    return instanse.delete(`auth/login`);\n  }\n};\nexport const securityAPI = {\n  getCaptchaUrl() {\n    return instanse.get(`security/get-captcha-url`);\n  }\n};","map":{"version":3,"names":["axios","instanse","create","withCredentials","headers","baseURL","ResultCodeEnum","ResultCodeWithCaptchaEnum","authAPI","getData","get","then","response","data","login","email","password","rememberMe","captcha","post","res","loginout","delete","securityAPI","getCaptchaUrl"],"sources":["C:/Dev/react/project1/src/components/api/api.ts"],"sourcesContent":["import axios  from \"axios\"\r\nimport { ProfileType ,PhotosType} from \"../../types/types\"\r\n\r\nexport const instanse = axios.create({\r\n    withCredentials:true,\r\n    headers:{'API-KEY':'cafd4f76-51d0-40a7-93fa-907a2586d1e6'},\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\n\r\n\r\n\r\n\r\ntype MeType = {\r\n    data:{id:number,email:string,login:string}\r\n    resultCode:ResultCodeEnum\r\n    messages:string[]\r\n}\r\ntype LoginType = {\r\n    data:{userId:number}\r\n    resultCode:ResultCodeEnum | ResultCodeWithCaptchaEnum\r\n    messages:string[]\r\n}\r\nexport enum ResultCodeEnum {\r\n    Success = 0,\r\n    Error = 0\r\n}\r\nexport enum ResultCodeWithCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n}\r\nexport const authAPI = {\r\n    getData() {\r\n        return instanse.get<MeType>(`auth/me`).then(response => response.data);\r\n    },\r\n    login(email:string,password:string,rememberMe:boolean = false,captcha: null | string = null) {\r\n        return instanse.post<LoginType>(`auth/login`,{email,password,rememberMe,captcha}).then(res => res.data);\r\n    },\r\n    loginout() {\r\n        return instanse.delete<LoginType>(`auth/login`);\r\n    },\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instanse.get(`security/get-captcha-url`)\r\n    },\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAO,OAAO;AAG1B,OAAO,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,eAAe,EAAC,IAAI;EACpBC,OAAO,EAAC;IAAC,SAAS,EAAC;EAAsC,CAAC;EAC1DC,OAAO,EAAC;AACZ,CAAC,CAAC;AAgBF,WAAYC,cAAc;AAGzB,WAHWA,cAAc;EAAdA,cAAc,CAAdA,cAAc;EAAdA,cAAc,CAAdA,cAAc;AAAA,GAAdA,cAAc,KAAdA,cAAc;AAI1B,WAAYC,yBAAyB;AAEpC,WAFWA,yBAAyB;EAAzBA,yBAAyB,CAAzBA,yBAAyB;AAAA,GAAzBA,yBAAyB,KAAzBA,yBAAyB;AAGrC,OAAO,MAAMC,OAAO,GAAG;EACnBC,OAAO,GAAG;IACN,OAAOR,QAAQ,CAACS,GAAG,CAAU,SAAQ,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EAC1E,CAAC;EACDC,KAAK,CAACC,KAAY,EAACC,QAAe,EAA2D;IAAA,IAA1DC,UAAkB,uEAAG,KAAK;IAAA,IAACC,OAAsB,uEAAG,IAAI;IACvF,OAAOjB,QAAQ,CAACkB,IAAI,CAAa,YAAW,EAAC;MAACJ,KAAK;MAACC,QAAQ;MAACC,UAAU;MAACC;IAAO,CAAC,CAAC,CAACP,IAAI,CAACS,GAAG,IAAIA,GAAG,CAACP,IAAI,CAAC;EAC3G,CAAC;EACDQ,QAAQ,GAAG;IACP,OAAOpB,QAAQ,CAACqB,MAAM,CAAa,YAAW,CAAC;EACnD;AACJ,CAAC;AACD,OAAO,MAAMC,WAAW,GAAG;EACvBC,aAAa,GAAG;IACZ,OAAOvB,QAAQ,CAACS,GAAG,CAAE,0BAAyB,CAAC;EACnD;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}