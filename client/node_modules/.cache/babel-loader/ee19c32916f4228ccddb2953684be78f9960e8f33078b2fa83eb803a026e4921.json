{"ast":null,"code":"import { userAPI } from './../components/api/api';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = ' SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  folowingInProgress: []\n};\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FOLLOW:\n      {\n        return {\n          ...state,\n          users: state.users.map(u => {\n            if (u.id === action.userId) {\n              return {\n                ...u,\n                followed: true\n              };\n            }\n            return u;\n          })\n        };\n      }\n    case UNFOLLOW:\n      {\n        return {\n          ...state,\n          users: state.users.map(u => {\n            if (u.id === action.userId) {\n              return {\n                ...u,\n                followed: false\n              };\n            }\n            return u;\n          })\n        };\n      }\n    case SET_USERS:\n      {\n        return {\n          ...state,\n          users: action.users\n        };\n      }\n    case SET_CURRENT_PAGE:\n      {\n        return {\n          ...state,\n          currentPage: action.currentPage\n        };\n      }\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return {\n          ...state,\n          totalUsersCount: 11\n        };\n      }\n    case TOGGLE_IS_FETCHING:\n      {\n        return {\n          ...state,\n          isFetching: action.isFetching\n        };\n      }\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return {\n          ...state,\n          folowingInProgress: action.isFetching ? [...state.folowingInProgress, action.userId] : [state.folowingInProgress.filter(id => id !== action.userId)]\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const acceptFollow = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const acceptUnfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nconst followUnfollowFlow = async (dispatch, userId) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let response = await userAPI.follow(userId);\n  if (response.data.resultCode === 0) {\n    dispatch(acceptFollow(userId));\n  }\n  dispatch(toggleFollowingProgress(false, userId));\n};\nexport const getUsers = (currentPage, pageSize) => {\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    dispatch(setCurrentPage(currentPage));\n    let data = await userAPI.getUsers(currentPage, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsersAC(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n  };\n};\nexport const follow = userId => {\n  return async dispatch => {\n    let apiMethod = userAPI.follow.bind(usrAPI);\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await userAPI.follow(userId);\n    if (response.data.resultCode === 0) {\n      dispatch(acceptFollow(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await userAPI.unfollow(userId);\n    if (response.data.resultCode === 0) {\n      dispatch(acceptUnfollow(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n  };\n};\nexport default usersReducer;","map":{"version":3,"names":["userAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","folowingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","filter","acceptFollow","acceptUnfollow","setUsersAC","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","response","follow","data","resultCode","getUsers","items","totalCount","apiMethod","bind","usrAPI","unfollow"],"sources":["C:/Dev/react/project1/src/redux/users-reducer.js"],"sourcesContent":["import {userAPI} from './../components/api/api';\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = ' SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage:1,\r\n  isFetching:true,\r\n  folowingInProgress:[],\r\n}\r\n\r\nconst usersReducer = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case FOLLOW: {\r\n          return { \r\n            ...state, \r\n            users:state.users.map( u => {\r\n              if(u.id === action.userId) {\r\n                return {...u, followed:true}\r\n              }\r\n              return u\r\n            })\r\n          };\r\n        }\r\n        case UNFOLLOW: {\r\n          return { \r\n            ...state, \r\n            users:state.users.map( u => {\r\n              if(u.id === action.userId) {\r\n                return {...u, followed:false}\r\n              }\r\n              return u\r\n            })\r\n          };\r\n        }\r\n        case SET_USERS : {\r\n          return {\r\n            ...state, users:action.users \r\n          }\r\n        }\r\n        case SET_CURRENT_PAGE : {\r\n          return {\r\n            ...state, currentPage:action.currentPage \r\n          }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT : {\r\n          return {\r\n            ...state, totalUsersCount:11 \r\n          }\r\n        }\r\n        case TOGGLE_IS_FETCHING : {\r\n          return {\r\n            ...state, isFetching:action.isFetching\r\n          }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS : {\r\n          return {\r\n            ...state, folowingInProgress:action.isFetching\r\n            ?[...state.folowingInProgress ,action.userId]\r\n            :[state.folowingInProgress.filter(id => id !== action.userId)]\r\n          }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n  }\r\n}\r\nexport const acceptFollow = (userId) => ({type:FOLLOW , userId})\r\nexport const acceptUnfollow = (userId) => ({type:UNFOLLOW,userId})\r\nexport const setUsersAC = (users) => ({type:SET_USERS,users})\r\nexport const setCurrentPage = (currentPage) => ({type:SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type:SET_TOTAL_USERS_COUNT, totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type:TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching,userId) => ({type:TOGGLE_IS_FOLLOWING_PROGRESS, isFetching,userId})\r\n\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch,userId) => {\r\n  dispatch(toggleFollowingProgress(true,userId));\r\n  let response = await userAPI.follow(userId)\r\n    if(response.data.resultCode === 0) {\r\n      dispatch(acceptFollow(userId));\r\n    }\r\n  dispatch(toggleFollowingProgress(false,userId));\r\n}\r\n\r\n\r\n\r\nexport const getUsers = (currentPage,pageSize) => { \r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(currentPage))\r\n    let data = await userAPI.getUsers(currentPage,pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsersAC(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n  }\r\n}\r\nexport const follow = (userId) => { \r\n  return async (dispatch) =>  {\r\n    let apiMethod = userAPI.follow.bind(usrAPI)\r\n    dispatch(toggleFollowingProgress(true,userId));\r\n    let response = await userAPI.follow(userId)\r\n      if(response.data.resultCode === 0) {\r\n        dispatch(acceptFollow(userId));\r\n      }\r\n      dispatch(toggleFollowingProgress(false,userId));\r\n  }\r\n}\r\nexport const unfollow = (userId) => { \r\n  return async (dispatch) =>  {\r\n    dispatch(toggleFollowingProgress(true,userId));\r\n    let response = await userAPI.unfollow(userId)\r\n        if(response.data.resultCode === 0) {\r\n          dispatch(acceptUnfollow(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false,userId));\r\n  }\r\n}\r\nexport default usersReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}