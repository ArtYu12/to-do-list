{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react\\\\project1\\\\src\\\\components\\\\login\\\\Login.jsx\";\nimport React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Input } from './../common/formsControls/formsControsl';\nimport { requered, maxLengthCreator } from './../../utials/validators/validators';\nimport { connect } from 'react-redux';\nimport { login } from './../../redux/auth-reducer';\nimport { Navigate } from 'react-router-dom';\nimport s from './../common/formsControls/formsControls.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength10 = maxLengthCreator(10);\nconst LoginForm = _ref => {\n  let {\n    handleSubmit,\n    error\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: createField('Login', 'email', Input, [requered])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: \"Password\",\n        name: \"password\",\n        component: Input,\n        validate: [requered, maxLength10],\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        component: Input,\n        name: \"rememberMe\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), \" remember me\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.formSummaryError,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this);\n};\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n_c2 = LoginReduxForm;\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.h\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 14\n  }, this);\n};\n_c3 = Login;\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\nexport default connect(mapStateToProps, {\n  login\n})(Login);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"LoginReduxForm\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"names":["React","reduxForm","Field","Input","requered","maxLengthCreator","connect","login","Navigate","s","maxLength10","LoginForm","handleSubmit","error","createField","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","isAuth","h","mapStateToProps","state","auth"],"sources":["C:/Dev/react/project1/src/components/login/Login.jsx"],"sourcesContent":["import React from 'react'\r\nimport {reduxForm,Field} from 'redux-form'\r\nimport {Input} from './../common/formsControls/formsControsl'\r\nimport {requered,maxLengthCreator} from './../../utials/validators/validators'\r\nimport {connect} from 'react-redux'\r\nimport {login} from './../../redux/auth-reducer'\r\nimport { Navigate } from 'react-router-dom'\r\nimport s from './../common/formsControls/formsControls.module.css'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst LoginForm = ({handleSubmit,error}) => {\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    {createField('Login','email',Input,[requered])}\r\n                </div>\r\n                <div>\r\n                    <Field placeholder='Password' name='password' component={Input} validate={[requered,maxLength10]} type=\"password\"/>\r\n                </div>\r\n                <div>\r\n                    <Field component={Input} name='rememberMe' type='checkbox'/> remember me\r\n                </div>\r\n                {error &&\r\n                <div className={s.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n                <div>   \r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form:'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email,formData.password,formData.rememberMe)\r\n    }\r\n    if(props.isAuth) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n    return ( <section>\r\n            <h2>{props.h}</h2>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </section>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps,{login})(Login)"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAACC,KAAK,QAAO,YAAY;AAC1C,SAAQC,KAAK,QAAO,yCAAyC;AAC7D,SAAQC,QAAQ,EAACC,gBAAgB,QAAO,sCAAsC;AAC9E,SAAQC,OAAO,QAAO,aAAa;AACnC,SAAQC,KAAK,QAAO,4BAA4B;AAChD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,CAAC,MAAM,oDAAoD;AAAA;AAElE,MAAMC,WAAW,GAAGL,gBAAgB,CAAC,EAAE,CAAC;AACxC,MAAMM,SAAS,GAAG,QAA0B;EAAA,IAAzB;IAACC,YAAY;IAACC;EAAK,CAAC;EACnC,oBACQ;IAAM,QAAQ,EAAED,YAAa;IAAA,wBACzB;MAAA,UACKE,WAAW,CAAC,OAAO,EAAC,OAAO,EAACX,KAAK,EAAC,CAACC,QAAQ,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAC5C,eACN;MAAA,uBACI,QAAC,KAAK;QAAC,WAAW,EAAC,UAAU;QAAC,IAAI,EAAC,UAAU;QAAC,SAAS,EAAED,KAAM;QAAC,QAAQ,EAAE,CAACC,QAAQ,EAACM,WAAW,CAAE;QAAC,IAAI,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACjH,eACN;MAAA,wBACI,QAAC,KAAK;QAAC,SAAS,EAAEP,KAAM;QAAC,IAAI,EAAC,YAAY;QAAC,IAAI,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAE,gBAChE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EACLU,KAAK,iBACN;MAAK,SAAS,EAAEJ,CAAC,CAACM,gBAAiB;MAAA,UAC9BF;IAAK;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAA,uBACI;QAAA,UAAQ;MAAK;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACpB;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEnB,CAAC;AAAA,KArBKF,SAAS;AAuBf,MAAMK,cAAc,GAAGf,SAAS,CAAC;EAC7BgB,IAAI,EAAC;AACT,CAAC,CAAC,CAACN,SAAS,CAAC;AAAA,MAFPK,cAAc;AAIpB,MAAME,KAAK,GAAIC,KAAK,IAAK;EAErB,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;IAC3BF,KAAK,CAACZ,KAAK,CAACc,QAAQ,CAACC,KAAK,EAACD,QAAQ,CAACE,QAAQ,EAACF,QAAQ,CAACG,UAAU,CAAC;EACrE,CAAC;EACD,IAAGL,KAAK,CAACM,MAAM,EAAE;IACb,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAE;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE;EACtC;EACA,oBAAS;IAAA,wBACD;MAAA,UAAKN,KAAK,CAACO;IAAC;MAAA;MAAA;MAAA;IAAA,QAAM,eAClB,QAAC,cAAc;MAAC,QAAQ,EAAEN;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/B;AAElB,CAAC;AAAA,MAbKF,KAAK;AAcX,MAAMS,eAAe,GAAIC,KAAK,KAAM;EAChCH,MAAM,EAACG,KAAK,CAACC,IAAI,CAACJ;AACtB,CAAC,CAAC;AACF,eAAenB,OAAO,CAACqB,eAAe,EAAC;EAACpB;AAAK,CAAC,CAAC,CAACW,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}