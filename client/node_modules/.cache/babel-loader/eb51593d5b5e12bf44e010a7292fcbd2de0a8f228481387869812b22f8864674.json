{"ast":null,"code":"import { profileAPI } from './../components/api/api';\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  posts: [{\n    'id': '1',\n    'message': 'Hi,how are you?',\n    'likesCount': 22\n  }, {\n    'id': '2',\n    'message': 'It\\'s my first post',\n    'likesCount': 15\n  }],\n  newPostText: '',\n  profile: null,\n  status: \"\"\n};\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          'id': 5,\n          'message': post.post,\n          'likesCount': 0\n        };\n        return {\n          ...state,\n          newPostText: '',\n          posts: [...state.posts, newPost]\n        };\n      }\n    case UPDATE_NEW_POST_TEXT:\n      {\n        return {\n          ...state,\n          newPostText: action.newText\n        };\n      }\n    case SET_USER_PROFILE:\n      {\n        return {\n          ...state,\n          profile: action.profile\n        };\n      }\n    case SET_STATUS:\n      {\n        return {\n          ...state,\n          status: action.status\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const addPostActionCreater = post => ({\n  type: ADD_POST,\n  post\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const updateNewPostTextActionCreater = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status: status\n});\nexport const getProfile = profileId => {\n  return dispatch => {\n    profileAPI.getProfile(profileId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nexport const getStatus = profileId => {\n  return dispatch => {\n    profileAPI.getStatus(profileId).then(response => {\n      dispatch(setStatus(response.data));\n    });\n  };\n};\nexport const updateStatus = status => {\n  return dispatch => {\n    profileAPI.updateStatus(status).then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n      }\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"names":["profileAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","initialState","posts","newPostText","profile","status","profileReducer","state","action","type","newPost","post","newText","addPostActionCreater","setUserProfile","updateNewPostTextActionCreater","text","setStatus","getProfile","profileId","dispatch","then","data","getStatus","response","updateStatus","resultCode"],"sources":["C:/Dev/react/project1/src/redux/profile-reducer.js"],"sourcesContent":["import {profileAPI} from './../components/api/api';\r\nconst ADD_POST = 'ADD-POST'\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nconst SET_USER_PROFILE  = 'SET_USER_PROFILE'\r\nconst SET_STATUS  = 'SET_STATUS'\r\n\r\n\r\nlet initialState = {\r\n  posts: [\r\n      {'id':'1', 'message':'Hi,how are you?', 'likesCount': 22},\r\n      {'id':'2', 'message':'It\\'s my first post', 'likesCount': 15}\r\n    ],\r\n  newPostText:'',\r\n  profile:null,\r\n  status:\"\",\r\n}\r\n\r\nconst profileReducer = (state = initialState,action) =>{\r\n    switch(action.type){\r\n   \r\n    case ADD_POST: {\r\n        let newPost = {\r\n          'id': 5, \r\n          'message':post.post,\r\n          'likesCount': 0\r\n        };\r\n        return {\r\n            ...state,\r\n            newPostText: '',\r\n            posts: [...state.posts, newPost]\r\n        }\r\n      }\r\n    case UPDATE_NEW_POST_TEXT:{\r\n        return {\r\n          ...state,\r\n          newPostText:action.newText\r\n        }\r\n    }\r\n    case SET_USER_PROFILE:{\r\n      return {\r\n        ...state,\r\n        profile:action.profile\r\n      }\r\n    }\r\n    case SET_STATUS:{\r\n      return {\r\n        ...state,\r\n        status:action.status\r\n      }\r\n    }\r\n    default: {\r\n        return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport const addPostActionCreater = (post) => ({type:ADD_POST,post});\r\nexport const setUserProfile  = (profile) => ({type:SET_USER_PROFILE,profile});\r\nexport const updateNewPostTextActionCreater = (text) =>({ type:UPDATE_NEW_POST_TEXT, newText:text });\r\nexport const setStatus = (status) => ({ type:SET_STATUS, status:status });\r\n\r\n\r\nexport const getProfile = (profileId) => { \r\n  return (dispatch) => {\r\n    profileAPI.getProfile(profileId).then(data => {\r\n      dispatch(setUserProfile(data));\r\n    });\r\n  }\r\n}\r\nexport const getStatus = (profileId) => { \r\n  return (dispatch) => {\r\n    profileAPI.getStatus(profileId).then(response => {\r\n      dispatch(setStatus(response.data));\r\n    });\r\n  }\r\n}\r\nexport const updateStatus = (status) => { \r\n  return (dispatch) => {\r\n    profileAPI.updateStatus(status).then(response => {\r\n      if(response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default profileReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}