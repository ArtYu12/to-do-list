{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react\\\\project1\\\\src\\\\components\\\\profile\\\\ProfileContainer.jsx\";\nimport Profile from './Profile';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getProfile } from './../../redux/profile-reducer';\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction withRouter(Component) {\n  var _s = $RefreshSig$();\n  function ComponentWithRouterProp(props) {\n    _s();\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n  return ComponentWithRouterProp;\n}\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let profileId = this.props.router.params.userId;\n    if (!profileId) {\n      profileId = 2;\n    }\n    this.props.getProfile(profileId);\n  }\n  render() {\n    if (!this.props.isAuth === false) return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 49\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Profile, {\n      ...this.props,\n      profile: this.props.profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n}\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  isAuth: state.auth.isAuth\n});\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer);\n_c = WithUrlDataContainerComponent;\nexport default connect(mapStateToProps, {\n  getProfile\n})(WithUrlDataContainerComponent);\nvar _c;\n$RefreshReg$(_c, \"WithUrlDataContainerComponent\");","map":{"version":3,"names":["Profile","React","connect","getProfile","useLocation","useNavigate","useParams","Navigate","withRouter","Component","ComponentWithRouterProp","props","location","navigate","params","ProfileContainer","componentDidMount","profileId","router","userId","render","isAuth","profile","mapStateToProps","state","profilePage","auth","WithUrlDataContainerComponent"],"sources":["C:/Dev/react/project1/src/components/profile/ProfileContainer.jsx"],"sourcesContent":["import Profile from './Profile';\r\nimport React from 'react';\r\nimport {connect}  from 'react-redux';\r\nimport {getProfile} from './../../redux/profile-reducer'\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n  } from \"react-router-dom\";\r\nimport { Navigate } from \"react-router-dom\";\r\n  function withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\ncomponentDidMount() {\r\n    let profileId = this.props.router.params.userId;\r\n    if(!profileId) {\r\n        profileId = 2;\r\n    }\r\n    this.props.getProfile(profileId);\r\n}\r\n\r\n    render() {\r\n        if(!this.props.isAuth === false) return <Navigate to='/login' />\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile:state.profilePage.profile,\r\n    isAuth:state.auth.isAuth,\r\n})\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\nexport default connect(mapStateToProps,{getProfile}) (WithUrlDataContainerComponent);"],"mappings":";AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,OAAO,QAAQ,aAAa;AACpC,SAAQC,UAAU,QAAO,+BAA+B;AACxD,SACIC,WAAW,EACXC,WAAW,EACXC,SAAS,QACJ,kBAAkB;AAC3B,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAC1C,SAASC,UAAU,CAACC,SAAS,EAAE;EAAA;EAC7B,SAASC,uBAAuB,CAACC,KAAK,EAAE;IAAA;IACpC,IAAIC,QAAQ,GAAGR,WAAW,EAAE;IAC5B,IAAIS,QAAQ,GAAGR,WAAW,EAAE;IAC5B,IAAIS,MAAM,GAAGR,SAAS,EAAE;IACxB,oBACI,QAAC,SAAS;MAAA,GACFK,KAAK;MACT,MAAM,EAAE;QAAEC,QAAQ;QAAEC,QAAQ;QAAEC;MAAO;IAAE;MAAA;MAAA;MAAA;IAAA,QACzC;EAEV;EAAC,GAVQJ,uBAAuB;IAAA,QACbN,WAAW,EACXC,WAAW,EACbC,SAAS;EAAA;EAS1B,OAAOI,uBAAuB;AAClC;AAEA,MAAMK,gBAAgB,SAASd,KAAK,CAACQ,SAAS,CAAC;EAE/CO,iBAAiB,GAAG;IAChB,IAAIC,SAAS,GAAG,IAAI,CAACN,KAAK,CAACO,MAAM,CAACJ,MAAM,CAACK,MAAM;IAC/C,IAAG,CAACF,SAAS,EAAE;MACXA,SAAS,GAAG,CAAC;IACjB;IACA,IAAI,CAACN,KAAK,CAACR,UAAU,CAACc,SAAS,CAAC;EACpC;EAEIG,MAAM,GAAG;IACL,IAAG,CAAC,IAAI,CAACT,KAAK,CAACU,MAAM,KAAK,KAAK,EAAE,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;IAChE,oBACI,QAAC,OAAO;MAAA,GAAK,IAAI,CAACV,KAAK;MAAE,OAAO,EAAE,IAAI,CAACA,KAAK,CAACW;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE;EAE/D;AACJ;AAEA,IAAIC,eAAe,GAAIC,KAAK,KAAM;EAC9BF,OAAO,EAACE,KAAK,CAACC,WAAW,CAACH,OAAO;EACjCD,MAAM,EAACG,KAAK,CAACE,IAAI,CAACL;AACtB,CAAC,CAAC;AAEF,IAAIM,6BAA6B,GAAGnB,UAAU,CAACO,gBAAgB,CAAC;AAAA,KAA5DY,6BAA6B;AACjC,eAAezB,OAAO,CAACqB,eAAe,EAAC;EAACpB;AAAU,CAAC,CAAC,CAAEwB,6BAA6B,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}