{"ast":null,"code":"import { applyMiddleware, combineReducers, legacy_createStore as createStore } from \"redux\";\nimport planReducer from \"./plan-reducer.ts\";\nimport tablesReducer from \"./tables-reducer.ts\";\nimport createTableReducer from \"./createTable-reducer.ts\";\nimport thunkMiddleware from 'redux-thunk';\nconst reducers = combineReducers({\n  planPage: planReducer,\n  tablesPage: tablesReducer,\n  createTable: createTableReducer\n});\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n// @ts-ignore\nwindow.store = store;\nexport default store;","map":{"version":3,"names":["applyMiddleware","combineReducers","legacy_createStore","createStore","planReducer","tablesReducer","createTableReducer","thunkMiddleware","reducers","planPage","tablesPage","createTable","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store"],"sources":["C:/Dev/react/Schedule for the day/client/src/redux/redux-store.ts"],"sourcesContent":["import { Action, applyMiddleware, combineReducers ,legacy_createStore as createStore} from \"redux\";\r\nimport planReducer from \"./plan-reducer.ts\";\r\nimport tablesReducer from \"./tables-reducer.ts\";\r\nimport createTableReducer from \"./createTable-reducer.ts\";\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\n\r\ntype reducersType = typeof reducers\r\nexport type InferActionsType<T> = T extends {[key:string]: (...args:any[]) => infer U} ? U :never\r\nexport type AppStateType = ReturnType<reducersType>\r\nexport type BaseThunkType<A extends Action,R = Promise<void>> = ThunkAction<R,AppStateType,unknown,A>\r\n\r\nconst reducers = combineReducers({\r\n    planPage:planReducer,\r\n    tablesPage:tablesReducer,\r\n    createTable:createTableReducer\r\n})\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n// @ts-ignore\r\nwindow.store = store\r\nexport default store"],"mappings":"AAAA,SAAiBA,eAAe,EAAEC,eAAe,EAAEC,kBAAkB,IAAIC,WAAW,QAAO,OAAO;AAClG,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,OAAOC,kBAAkB,MAAM,0BAA0B;AACzD,OAAOC,eAAe,MAAuB,aAAa;AAO1D,MAAMC,QAAQ,GAAGP,eAAe,CAAC;EAC7BQ,QAAQ,EAACL,WAAW;EACpBM,UAAU,EAACL,aAAa;EACxBM,WAAW,EAACL;AAChB,CAAC,CAAC;;AAEF;AACA,MAAMM,gBAAgB,GAAGC,MAAM,CAACC,oCAAoC,IAAIC,OAAO;AAC/E,MAAMC,KAAK,GAAGb,WAAW,CAACK,QAAQ,EAAEI,gBAAgB,CAACZ,eAAe,CAACO,eAAe,CAAC,CAAC,CAAC;AACvF;AACAM,MAAM,CAACG,KAAK,GAAGA,KAAK;AACpB,eAAeA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}