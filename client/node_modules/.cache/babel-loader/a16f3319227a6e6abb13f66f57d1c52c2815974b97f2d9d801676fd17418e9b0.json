{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react\\\\project1\\\\src\\\\components\\\\users\\\\UsersSearchForm.tsx\",\n  _s = $RefreshSig$();\nimport { Formik, Form, Field } from 'formik';\nimport { isSubmitting } from 'redux-form';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersSearchFormValidate = values => {\n  _s();\n  const filter = useSelector();\n  const errors = {};\n  return errors;\n};\n_s(UsersSearchFormValidate, \"CTxSmkRKeY17NmVdjL4FcSzygAI=\", true);\n_c = UsersSearchFormValidate;\nconst UsersSearchForm = /*#__PURE__*/React.memo(_c2 = props => {\n  const submit = (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n    debugger;\n    const filter = {\n      term: values.term,\n      friend: values.friend === \"null\" ? null : values.friend === \"true\" ? true : false\n    };\n    props.onFilterChanged(filter);\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: submit,\n      validate: UsersSearchFormValidate,\n      initialValues: {\n        term: \"\",\n        friend: \"null\"\n      },\n      children: _ref2 => {\n        let {\n          isSubmitting\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"term\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: \"select\",\n            name: \"friend\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"null\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"Only followed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"Only unfollowed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Find\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n});\n_c3 = UsersSearchForm;\nexport default UsersSearchForm;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UsersSearchFormValidate\");\n$RefreshReg$(_c2, \"UsersSearchForm$React.memo\");\n$RefreshReg$(_c3, \"UsersSearchForm\");","map":{"version":3,"names":["Formik","Form","Field","isSubmitting","React","UsersSearchFormValidate","values","filter","useSelector","errors","UsersSearchForm","memo","props","submit","setSubmitting","term","friend","onFilterChanged"],"sources":["C:/Dev/react/project1/src/components/users/UsersSearchForm.tsx"],"sourcesContent":["import { Formik ,Form , Field} from 'formik';\r\nimport { isSubmitting } from 'redux-form';\r\nimport React from 'react';\r\nimport { SearchFilterType } from '../../redux/users-reducer';\r\n\r\n\r\nconst UsersSearchFormValidate = (values:any) => {\r\n    const filter = useSelector()\r\n\r\n    const errors = {}\r\n    return errors\r\n}\r\ntype PropsType = {\r\n    onFilterChanged:(filter:SearchFilterType) => void\r\n}\r\ntype FormType = {\r\n    term:string\r\n    friend: \"true\" | \"false\" | \"null\"\r\n}\r\nconst UsersSearchForm:React.FC<PropsType> = React.memo((props) => {\r\n    const submit = (values:FormType,{setSubmitting}:{setSubmitting :(isSubmitting:boolean) => void}) => {\r\n        debugger\r\n        const filter :SearchFilterType = {\r\n            term: values.term,\r\n            friend: values.friend === \"null\" ? null : values.friend === \"true\" ? true : false\r\n        }\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n    return <div>\r\n            <Formik \r\n                onSubmit={submit} \r\n                validate={UsersSearchFormValidate}\r\n                initialValues={{term:\"\",friend:\"null\"}}\r\n            >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\" />\r\n                    <Field as=\"select\" name=\"friend\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>Find</button>\r\n                </Form> \r\n            )}\r\n            </Formik>\r\n        </div>\r\n})\r\n\r\nexport default UsersSearchForm"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,EAAGC,KAAK,QAAO,QAAQ;AAC5C,SAASC,YAAY,QAAQ,YAAY;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAI1B,MAAMC,uBAAuB,GAAIC,MAAU,IAAK;EAAA;EAC5C,MAAMC,MAAM,GAAGC,WAAW,EAAE;EAE5B,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,OAAOA,MAAM;AACjB,CAAC;AAAA,GALKJ,uBAAuB;AAAA,KAAvBA,uBAAuB;AAa7B,MAAMK,eAAmC,gBAAGN,KAAK,CAACO,IAAI,OAAEC,KAAK,IAAK;EAC9D,MAAMC,MAAM,GAAG,CAACP,MAAe,WAAqE;IAAA,IAApE;MAACQ;IAA6D,CAAC;IAC3F;IACA,MAAMP,MAAwB,GAAG;MAC7BQ,IAAI,EAAET,MAAM,CAACS,IAAI;MACjBC,MAAM,EAAEV,MAAM,CAACU,MAAM,KAAK,MAAM,GAAG,IAAI,GAAGV,MAAM,CAACU,MAAM,KAAK,MAAM,GAAG,IAAI,GAAG;IAChF,CAAC;IACDJ,KAAK,CAACK,eAAe,CAACV,MAAM,CAAC;IAC7BO,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EACD,oBAAO;IAAA,uBACC,QAAC,MAAM;MACH,QAAQ,EAAED,MAAO;MACjB,QAAQ,EAAER,uBAAwB;MAClC,aAAa,EAAE;QAACU,IAAI,EAAC,EAAE;QAACC,MAAM,EAAC;MAAM,CAAE;MAAA,UAE1C;QAAA,IAAC;UAACb;QAAY,CAAC;QAAA,oBACZ,QAAC,IAAI;UAAA,wBACD,QAAC,KAAK;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAG,eACjC,QAAC,KAAK;YAAC,EAAE,EAAC,QAAQ;YAAC,IAAI,EAAC,QAAQ;YAAA,wBAC5B;cAAQ,KAAK,EAAC,MAAM;cAAA,UAAC;YAAG;cAAA;cAAA;cAAA;YAAA,QAAS,eACjC;cAAQ,KAAK,EAAC,MAAM;cAAA,UAAC;YAAa;cAAA;cAAA;cAAA;YAAA,QAAS,eAC3C;cAAQ,KAAK,EAAC,OAAO;cAAA,UAAC;YAAe;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;YAAA;YAAA;YAAA;UAAA,QAC1C,eACR;YAAQ,IAAI,EAAC,QAAQ;YAAC,QAAQ,EAAEA,YAAa;YAAA,UAAC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACxD;MAAA;IACV;MAAA;MAAA;MAAA;IAAA;EACQ;IAAA;IAAA;IAAA;EAAA,QACP;AACd,CAAC,CAAC;AAAA,MA7BIO,eAAmC;AA+BzC,eAAeA,eAAe;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}