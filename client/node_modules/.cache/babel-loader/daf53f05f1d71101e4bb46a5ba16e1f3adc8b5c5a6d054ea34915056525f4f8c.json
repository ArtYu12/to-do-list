{"ast":null,"code":"import { profileAPI } from './../components/api/api';\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\nlet initialState = {\n  posts: [{\n    'id': '1',\n    'message': 'Hi,how are you?',\n    'likesCount': 22\n  }, {\n    'id': '2',\n    'message': 'It\\'s my first post',\n    'likesCount': 15\n  }],\n  profile: null,\n  status: \"\"\n};\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          'id': 5,\n          'message': action.post,\n          'likesCount': 0\n        };\n        return {\n          ...state,\n          posts: [...state.posts, newPost]\n        };\n      }\n    case UPDATE_NEW_POST_TEXT:\n      {\n        return {\n          ...state,\n          newPostText: action.newText\n        };\n      }\n    case SET_USER_PROFILE:\n      {\n        return {\n          ...state,\n          profile: action.profile\n        };\n      }\n    case SET_STATUS:\n      {\n        return {\n          ...state,\n          status: action.status\n        };\n      }\n    case DELETE_POST:\n      {\n        return {\n          ...state,\n          posts: state.posts.filter(p => p.id != action.postId)\n        };\n      }\n    case SAVE_PHOTO_SUCCESS:\n      {\n        return {\n          ...state,\n          profile: {\n            ...state.profile,\n            photos: action.photos\n          }\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const addPostActionCreater = post => ({\n  type: ADD_POST,\n  post\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const updateNewPostTextActionCreater = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status: status\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const savePhotoSuccess = photos => ({\n  type: SAVE_PHOTO_SUCCESS,\n  photos\n});\nexport const getProfile = profileId => async dispatch => {\n  let response = await profileAPI.getProfile(profileId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = profileId => async dispatch => {\n  let response = await profileAPI.getStatus(profileId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  let response = await profileAPI.savePhoto(file);\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n};\nexport const saveProfile = profile => async (dispatch, getState) => {\n  let response = await profileAPI.saveProfile(profile);\n  if (response.data.resultCode === 0) {\n    dispatch(getProfile(profile.id));\n  }\n};\nexport default profileReducer;","map":{"version":3,"names":["profileAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","initialState","posts","profile","status","profileReducer","state","action","type","newPost","post","newPostText","newText","filter","p","id","postId","photos","addPostActionCreater","setUserProfile","updateNewPostTextActionCreater","text","setStatus","deletePost","savePhotoSuccess","getProfile","profileId","dispatch","response","data","getStatus","updateStatus","resultCode","savePhoto","file","saveProfile","getState"],"sources":["C:/Dev/react/project1/src/redux/profile-reducer.js"],"sourcesContent":["import {profileAPI} from './../components/api/api';\r\nconst ADD_POST = 'ADD-POST'\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nconst SET_USER_PROFILE  = 'SET_USER_PROFILE'\r\nconst SET_STATUS  = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n  posts: [\r\n      {'id':'1', 'message':'Hi,how are you?', 'likesCount': 22},\r\n      {'id':'2', 'message':'It\\'s my first post', 'likesCount': 15}\r\n    ],\r\n  profile:null,\r\n  status:\"\",\r\n}\r\n\r\nconst profileReducer = (state = initialState,action) =>{\r\n    switch(action.type){\r\n   \r\n    case ADD_POST: {\r\n        let newPost = {\r\n          'id': 5, \r\n          'message':action.post,\r\n          'likesCount': 0\r\n        };\r\n        return {\r\n            ...state,\r\n            posts: [...state.posts, newPost]\r\n        }\r\n      }\r\n    case UPDATE_NEW_POST_TEXT:{\r\n        return {\r\n          ...state,\r\n          newPostText:action.newText\r\n        }\r\n    }\r\n    case SET_USER_PROFILE:{\r\n      return {\r\n        ...state,\r\n        profile:action.profile\r\n      }\r\n    }\r\n    case SET_STATUS:{\r\n      return {\r\n        ...state,\r\n        status:action.status\r\n      }\r\n    }\r\n    case DELETE_POST:{\r\n      return {\r\n        ...state,\r\n        posts:state.posts.filter(p => p.id != action.postId)\r\n      }\r\n    }\r\n    case SAVE_PHOTO_SUCCESS:{\r\n      return {\r\n        ...state,\r\n        profile: {...state.profile , photos:action.photos}\r\n      }\r\n    }\r\n    default: {\r\n        return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport const addPostActionCreater = (post) => ({type:ADD_POST,post});\r\nexport const setUserProfile  = (profile) => ({type:SET_USER_PROFILE,profile});\r\nexport const updateNewPostTextActionCreater = (text) =>({ type:UPDATE_NEW_POST_TEXT, newText:text });\r\nexport const setStatus = (status) => ({ type:SET_STATUS, status:status });\r\nexport const deletePost = (postId) => ({ type:DELETE_POST,postId});\r\nexport const savePhotoSuccess = (photos) => ({ type:SAVE_PHOTO_SUCCESS,photos});\r\n\r\n\r\nexport const getProfile = (profileId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(profileId)\r\n      dispatch(setUserProfile(response.data));\r\n    }\r\nexport const getStatus = (profileId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(profileId)\r\n      dispatch(setStatus(response.data));\r\n    }\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status)\r\n      if(response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n      }\r\n  }\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n  let response = await profileAPI.savePhoto(file)\r\n      if(response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n      }\r\n  }\r\nexport const saveProfile = (profile) => async (dispatch,getState) => {\r\n  let response = await profileAPI.saveProfile(profile)\r\n      if(response.data.resultCode === 0) {\r\n       dispatch(getProfile(profile.id));\r\n      }\r\n  }\r\nexport default profileReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}