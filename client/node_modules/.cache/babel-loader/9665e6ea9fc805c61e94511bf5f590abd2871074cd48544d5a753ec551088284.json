{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react\\\\project1\\\\src\\\\components\\\\common\\\\formsControls\\\\formsControsl.tsx\";\nimport React from 'react';\nimport s from './formsControls.module.css';\nimport { Field } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormControl = _ref => {\n  let {\n    meta: {\n      touched,\n      error\n    },\n    children\n  } = _ref;\n  const hasError = touched && error;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: hasError ? s.error : '',\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: s.span,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = FormControl;\nexport function createField(placeholder, name, component, validates) {\n  let props = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  let text = arguments.length > 5 ? arguments[5] : undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      placeholder: placeholder,\n      name: name,\n      component: component,\n      validate: validates,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n}\nexport const Textarea = props => {\n  const {\n    input,\n    meta,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ...input,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 37\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n_c2 = Textarea;\nexport const Input = props => {\n  const {\n    input,\n    meta,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      ...input,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 36\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n_c3 = Input;\nexport type;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"Textarea\");\n$RefreshReg$(_c3, \"Input\");","map":{"version":3,"names":["React","s","Field","FormControl","meta","touched","error","children","hasError","span","createField","placeholder","name","component","validates","props","text","Textarea","input","restProps","Input","type"],"sources":["C:/Dev/react/project1/src/components/common/formsControls/formsControsl.tsx"],"sourcesContent":["import React from 'react';\r\nimport s from './formsControls.module.css';\r\nimport { Field, WrappedFieldProps, WrappedFieldMetaProps } from 'redux-form';\r\nimport { FieldlValidType } from '../../../utials/validators/validators';\r\n\r\ntype FormControlPropsType = {\r\n    meta:WrappedFieldMetaProps\r\n    children:React.ReactNode\r\n}\r\n\r\nconst FormControl:React.FC<FormControlPropsType> = ({meta:{touched,error},children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div>\r\n            <div className={(hasError?s.error:'')} >{children}</div>\r\n            { hasError && <span className={s.span}>{error}</span>}\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(placeholder:string | undefined, name:FormKeysType,component:React.FC<WrappedFieldProps>,validates:Array<FieldlValidType>,props = {}, text){\r\n    return <div><Field placeholder={placeholder} name={name} component={component} validate={validates} {...props}/>{text}</div>\r\n}\r\n\r\nexport const Textarea = (props:WrappedFieldProps) => {\r\n    const {input,meta,...restProps} = props\r\n    return <FormControl {...props} ><textarea {...input} {...restProps}/></FormControl>\r\n}\r\nexport const Input = (props:WrappedFieldProps) => {\r\n    const {input,meta,...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport type     "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,4BAA4B;AAC1C,SAASC,KAAK,QAAkD,YAAY;AAAC;AAQ7E,MAAMC,WAA0C,GAAG,QAAqC;EAAA,IAApC;IAACC,IAAI,EAAC;MAACC,OAAO;MAACC;IAAK,CAAC;IAACC;EAAQ,CAAC;EAC/E,MAAMC,QAAQ,GAAGH,OAAO,IAAIC,KAAK;EACjC,oBACI;IAAA,wBACI;MAAK,SAAS,EAAGE,QAAQ,GAACP,CAAC,CAACK,KAAK,GAAC,EAAI;MAAA,UAAGC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAO,EACtDC,QAAQ,iBAAI;MAAM,SAAS,EAAEP,CAAC,CAACQ,IAAK;MAAA,UAAEH;IAAK;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACnD;AAEd,CAAC;AAAA,KARKH,WAA0C;AAUhD,OAAO,SAASO,WAAW,CAA8BC,WAA8B,EAAEC,IAAiB,EAACC,SAAqC,EAACC,SAAgC,EAAkB;EAAA,IAAjBC,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEC,IAAI;EAC9L,oBAAO;IAAA,wBAAK,QAAC,KAAK;MAAC,WAAW,EAAEL,WAAY;MAAC,IAAI,EAAEC,IAAK;MAAC,SAAS,EAAEC,SAAU;MAAC,QAAQ,EAAEC,SAAU;MAAA,GAAKC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,EAACC,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAAO;AAChI;AAEA,OAAO,MAAMC,QAAQ,GAAIF,KAAuB,IAAK;EACjD,MAAM;IAACG,KAAK;IAACd,IAAI;IAAC,GAAGe;EAAS,CAAC,GAAGJ,KAAK;EACvC,oBAAO,QAAC,WAAW;IAAA,GAAKA,KAAK;IAAA,uBAAG;MAAA,GAAcG,KAAK;MAAA,GAAMC;IAAS;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAAc;AACvF,CAAC;AAAA,MAHYF,QAAQ;AAIrB,OAAO,MAAMG,KAAK,GAAIL,KAAuB,IAAK;EAC9C,MAAM;IAACG,KAAK;IAACd,IAAI;IAAC,GAAGe;EAAS,CAAC,GAAGJ,KAAK;EACvC,oBAAO,QAAC,WAAW;IAAA,GAAKA,KAAK;IAAA,uBAAE;MAAA,GAAWG,KAAK;MAAA,GAAMC;IAAS;MAAA;MAAA;MAAA;IAAA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAc;AACpF,CAAC;AAAA,MAHYC,KAAK;AAKlB,OAAOC,IAAI;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}