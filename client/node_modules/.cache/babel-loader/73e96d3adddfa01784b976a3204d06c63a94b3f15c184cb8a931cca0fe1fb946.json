{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react\\\\Schedule for the day\\\\client\\\\src\\\\components\\\\planPage\\\\planPageComponents\\\\TodosList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './List.module.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodosList = _ref => {\n  _s();\n  let {\n    todos\n  } = _ref;\n  //const list = useSelector(selectPurposes)\n  const [checked, setChecked] = useState(completed);\n  const cls = ['title'];\n  if (checked) {\n    cls.push('completed');\n  }\n\n  //const deletePurpose = (purpose) => {\n  //    dispatch(actions.deletePurpose(purpose))\n  //}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todos.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.listOfWork,\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 30\n    }, this)\n  }, void 0, false);\n};\n_s(TodosList, \"HVlacVHJnykojK9Kf1pQBl45DK8=\");\n_c = TodosList;\nexport default ListOfTodos;\nvar _c;\n$RefreshReg$(_c, \"TodosList\");","map":{"version":3,"names":["React","useState","styles","TodosList","todos","checked","setChecked","completed","cls","push","length","listOfWork","map","todo","ListOfTodos"],"sources":["C:/Dev/react/Schedule for the day/client/src/components/planPage/planPageComponents/TodosList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styles from './List.module.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectPurposes } from '../../../redux/plan-selectors';\r\nimport { purposeType } from '../types/types';\r\nimport {actions} from '../../../redux/plan-reducer';\r\n\r\nconst TodosList = ({todos}) => {\r\n    //const list = useSelector(selectPurposes)\r\n    const [checked,setChecked] = useState(completed)\r\n    const cls = ['title']\r\n    if(checked) {\r\n        cls.push('completed')\r\n    }\r\n\r\n\r\n\r\n\r\n    //const deletePurpose = (purpose) => {\r\n    //    dispatch(actions.deletePurpose(purpose))\r\n    //}\r\n    return (\r\n        <>\r\n        {todos.length > 0 && <ul className={styles.listOfWork}>\r\n            {todos.map((todo) => <TodoItem todo={todo}/>)}\r\n        </ul>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfTodos"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AAAA;AAAA;AAMtC,MAAMC,SAAS,GAAG,QAAa;EAAA;EAAA,IAAZ;IAACC;EAAK,CAAC;EACtB;EACA,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGL,QAAQ,CAACM,SAAS,CAAC;EAChD,MAAMC,GAAG,GAAG,CAAC,OAAO,CAAC;EACrB,IAAGH,OAAO,EAAE;IACRG,GAAG,CAACC,IAAI,CAAC,WAAW,CAAC;EACzB;;EAKA;EACA;EACA;EACA,oBACI;IAAA,UACCL,KAAK,CAACM,MAAM,GAAG,CAAC,iBAAI;MAAI,SAAS,EAAER,MAAM,CAACS,UAAW;MAAA,UACjDP,KAAK,CAACQ,GAAG,CAAEC,IAAI,iBAAK,QAAC,QAAQ;QAAC,IAAI,EAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE;IAAC;MAAA;MAAA;MAAA;IAAA;EAC5C,iBACF;AAEX,CAAC;AAAA,GArBKV,SAAS;AAAA,KAATA,SAAS;AAuBf,eAAeW,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}