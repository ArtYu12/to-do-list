{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react\\\\Schedule for the day\\\\client\\\\src\\\\components\\\\planPage\\\\planPageComponents\\\\List.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from 'react';\nimport styles from './List.module.css';\nimport TodosList from './TodosList.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const options = {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  };\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todos, setTodos] = useState([]);\n  const Context = /*#__PURE__*/createContext({});\n  const addTodo = event => {\n    if (event.key === 'Enter') {\n      let newId;\n      if (!todos[todos.length - 1]) {\n        newId = 1;\n      } else {\n        newId = todos[todos.length - 1].id + 1;\n      }\n      setTodos([...todos, {\n        id: newId,\n        title: todoTitle,\n        data: new Date().toLocaleDateString(\"en-KZ\", options),\n        completed: false\n      }]);\n      setTodoTitle('');\n    }\n  };\n  useEffect(() => {\n    const row = localStorage.getItem('todos') || [];\n    //@ts-ignore\n    setTodos(JSON.parse(row));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n  const removeTodo = id => {\n    setTodos(todos.filter(todo => {\n      return todo.id !== id;\n    }));\n  };\n  const toggleTodo = id => {\n    setTodos(todos.map(todo => {\n      id(todo.id = id);\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      removeTodo\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.list,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Create new part of your list\",\n          value: todoTitle,\n          onChange: event => setTodoTitle(event.target.value),\n          className: styles.searchInput + \" \" + styles.inputs,\n          onKeyDown: event => addTodo(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: styles.submit + \" \" + styles.inputs,\n          value: \"ADD\",\n          onClick: event => addTodo(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TodosList, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(List, \"1xHfj1ygwpyyky8pNncxTnndgZU=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","createContext","styles","TodosList","List","options","weekday","year","month","day","todoTitle","setTodoTitle","todos","setTodos","Context","addTodo","event","key","newId","length","id","title","data","Date","toLocaleDateString","completed","row","localStorage","getItem","JSON","parse","setItem","stringify","removeTodo","filter","todo","toggleTodo","map","list","form","target","value","searchInput","inputs","submit"],"sources":["C:/Dev/react/Schedule for the day/client/src/components/planPage/planPageComponents/List.tsx"],"sourcesContent":["import React, { useState ,useEffect,createContext} from 'react'\r\nimport styles from './List.module.css'\r\nimport SearchInput from './SearchInput.tsx'\r\nimport TodosList from './TodosList.tsx'\r\n\r\nexport type Todo = {\r\n    id:number\r\n    title:string\r\n    data:string\r\n    completed:boolean\r\n}\r\nconst List = () => {\r\n    const options = {\r\n        weekday: \"long\",\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n    };\r\n    const [todoTitle,setTodoTitle] = useState('')\r\n    const [todos,setTodos] = useState([] as Array<Todo>)\r\n    const Context = createContext({})\r\n    const addTodo = (event) => {\r\n        if(event.key === 'Enter') {\r\n            let newId:number;\r\n            if(!todos[todos.length - 1]) {\r\n                newId = 1\r\n            } else {\r\n                newId = (todos[todos.length - 1].id + 1)\r\n            }\r\n            setTodos([\r\n                ...todos,\r\n                {\r\n                    id:newId,\r\n                    title:todoTitle,\r\n                    data:new Date().toLocaleDateString(\"en-KZ\",options),\r\n                    completed:false\r\n                }\r\n            ])\r\n            setTodoTitle('')\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        const row = localStorage.getItem('todos') || []\r\n        //@ts-ignore\r\n        setTodos(JSON.parse(row))\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos',JSON.stringify(todos))\r\n    },[todos])\r\n\r\n    const removeTodo = (id) => {\r\n        setTodos(todos.filter((todo) => {\r\n            return todo.id !== id \r\n        }))\r\n    }\r\n\r\n    const toggleTodo = (id) => {\r\n        setTodos(todos.map(todo => {\r\n            id(todo.id = id)\r\n        }))\r\n    }\r\n\r\n    return(\r\n        <Context.Provider value={{removeTodo}}>\r\n        <div className={styles.list}>\r\n            <div className={styles.form}>\r\n                <input type=\"text\" \r\n                    placeholder=\"Create new part of your list\" \r\n                    value={todoTitle} \r\n                    onChange={(event) => setTodoTitle(event.target.value)} \r\n                    className={styles.searchInput+\" \"+styles.inputs}\r\n                    onKeyDown={event => addTodo(event)}\r\n                    />\r\n                <input \r\n                    type=\"submit\" \r\n                    className={styles.submit+\" \"+styles.inputs} \r\n                    value=\"ADD\" \r\n                    onClick={event => addTodo(event)}\r\n                    />\r\n            </div>\r\n            <TodosList todos={todos}/>\r\n        </div>\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default List"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}