{"ast":null,"code":"const ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nlet initialState = {\n  messages: [{\n    'id': 1,\n    'message': 'Hi'\n  }, {\n    'id': 2,\n    'message': 'How are you?'\n  }, {\n    'id': 3,\n    'message': 'Yo'\n  }, {\n    'id': 4,\n    'message': 'Yo'\n  }],\n  dialogs: [{\n    'id': 1,\n    'name': 'Dima'\n  }, {\n    'id': 2,\n    'name': 'Roof'\n  }, {\n    'id': 3,\n    'name': 'Andry'\n  }, {\n    'id': 4,\n    'name': 'Roma'\n  }]\n};\nexport const dialogsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_MESSAGE:\n      {\n        let newMessage = {\n          'id': 5,\n          'message': action.newMessageBody\n        };\n        return {\n          ...state,\n          messages: [...state.messages, newMessage]\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};\ntype;\nexport const addMessageActionCreater = newMessageBody => ({\n  type: ADD_MESSAGE,\n  newMessageBody\n});\nexport default dialogsReducer;","map":{"version":3,"names":["ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","initialState","messages","dialogs","dialogsReducer","state","action","type","newMessage","newMessageBody","addMessageActionCreater"],"sources":["C:/Dev/react/project1/src/redux/dialogs-reducer.ts"],"sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE'\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'\r\n\r\ntype DialogsType = {\r\n  id:number\r\n  name:string\r\n}\r\ntype MessagesType = {\r\n  id:number\r\n  message:string\r\n}\r\n\r\nlet initialState =  {\r\n  messages: [\r\n    {'id':1, 'message': 'Hi'},\r\n    {'id':2, 'message': 'How are you?'},\r\n    {'id':3, 'message': 'Yo'},\r\n    {'id':4, 'message': 'Yo'}\r\n  ] as Array<MessagesType>,\r\n  dialogs: [\r\n    {'id':1, 'name': 'Dima'},\r\n    {'id':2, 'name': 'Roof'},\r\n    {'id':3, 'name': 'Andry'},\r\n    {'id':4, 'name': 'Roma'}\r\n  ] as Array<DialogsType>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const dialogsReducer = (state:InitialStateType = initialState,action:ActionsType):InitialStateType =>{\r\n  switch(action.type){\r\n    case ADD_MESSAGE: {\r\n      let newMessage = {\r\n        'id':5,\r\n        'message':action.newMessageBody\r\n      }\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages,newMessage]\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\ntype ActionsType = addMessageActionCreaterType\r\ntype addMessageActionCreaterType = {\r\n  type: typeof ADD_MESSAGE\r\n  newMessageBody:string\r\n}\r\ntype \r\nexport const addMessageActionCreater = (newMessageBody:string):addMessageActionCreaterType => ({\r\n  type:ADD_MESSAGE,newMessageBody\r\n})\r\n\r\nexport default dialogsReducer;"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAAa;AACjC,MAAMC,uBAAuB,GAAG,yBAAyB;AAWzD,IAAIC,YAAY,GAAI;EAClBC,QAAQ,EAAE,CACR;IAAC,IAAI,EAAC,CAAC;IAAE,SAAS,EAAE;EAAI,CAAC,EACzB;IAAC,IAAI,EAAC,CAAC;IAAE,SAAS,EAAE;EAAc,CAAC,EACnC;IAAC,IAAI,EAAC,CAAC;IAAE,SAAS,EAAE;EAAI,CAAC,EACzB;IAAC,IAAI,EAAC,CAAC;IAAE,SAAS,EAAE;EAAI,CAAC,CACH;EACxBC,OAAO,EAAE,CACP;IAAC,IAAI,EAAC,CAAC;IAAE,MAAM,EAAE;EAAM,CAAC,EACxB;IAAC,IAAI,EAAC,CAAC;IAAE,MAAM,EAAE;EAAM,CAAC,EACxB;IAAC,IAAI,EAAC,CAAC;IAAE,MAAM,EAAE;EAAO,CAAC,EACzB;IAAC,IAAI,EAAC,CAAC;IAAE,MAAM,EAAE;EAAM,CAAC;AAE5B,CAAC;AAID,OAAO,MAAMC,cAAc,GAAG,YAA8E;EAAA,IAA7EC,KAAsB,uEAAGJ,YAAY;EAAA,IAACK,MAAkB;EACrF,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAKR,WAAW;MAAE;QAChB,IAAIS,UAAU,GAAG;UACf,IAAI,EAAC,CAAC;UACN,SAAS,EAACF,MAAM,CAACG;QACnB,CAAC;QACD,OAAO;UACL,GAAGJ,KAAK;UACRH,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAQ,EAACM,UAAU;QACzC,CAAC;MACH;IACA;MAAS;QACP,OAAOH,KAAK;MACd;EAAC;AAEL,CAAC;AAODE,IAAI;AACJ,OAAO,MAAMG,uBAAuB,GAAID,cAAqB,KAAkC;EAC7FF,IAAI,EAACR,WAAW;EAACU;AACnB,CAAC,CAAC;AAEF,eAAeL,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}