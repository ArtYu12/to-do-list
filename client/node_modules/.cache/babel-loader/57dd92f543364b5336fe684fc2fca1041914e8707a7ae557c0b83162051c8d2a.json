{"ast":null,"code":"import { userAPI } from '../components/api/api';\nimport { updateObjectInArray } from '../utials/object-helpers';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = ' SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  folowingInProgress: []\n};\n//users: updateObjectInArray(state.users,action.userId,'id',{followed:true})\n\n/*\r\nstate.users.map( u => {\r\n              if(u.id === action.userId) {\r\n                return {...u, followed:true}\r\n              }\r\n              return u\r\n            })\r\n            */\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FOLLOW:\n      {\n        return {\n          ...state,\n          users: updateObjectInArray(state.users, action.userId, 'id', {\n            followed: true\n          })\n        };\n      }\n    case UNFOLLOW:\n      {\n        return {\n          ...state,\n          users: updateObjectInArray(state.users, action.userId, 'id', {\n            followed: false\n          })\n        };\n      }\n    case SET_USERS:\n      {\n        return {\n          ...state,\n          users: action.users\n        };\n      }\n    case SET_CURRENT_PAGE:\n      {\n        return {\n          ...state,\n          currentPage: action.currentPage\n        };\n      }\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return {\n          ...state,\n          totalUsersCount: action.totalUsersCount\n        };\n      }\n    case TOGGLE_IS_FETCHING:\n      {\n        return {\n          ...state,\n          isFetching: action.isFetching\n        };\n      }\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return {\n          ...state,\n          folowingInProgress: action.isFetching ? [...state.folowingInProgress, action.userId] : [state.folowingInProgress.filter(id => id !== action.userId)]\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const acceptFollow = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const acceptUnfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const getUsers = (currentPage, pageSize) => {\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    dispatch(setCurrentPage(currentPage));\n    let data = await userAPI.getUsers(currentPage, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsersAC(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n  };\n};\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, AC) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let response = await apiMethod(userId);\n  if (response.data.resultCode === 0) {\n    dispatch(AC(userId));\n  }\n  dispatch(toggleFollowingProgress(false, userId));\n};\nexport const follow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), acceptFollow);\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userAPI), acceptUnfollow);\n  };\n};\nexport default usersReducer;","map":{"version":3,"names":["userAPI","updateObjectInArray","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","folowingInProgress","usersReducer","state","action","type","userId","followed","filter","id","acceptFollow","acceptUnfollow","setUsersAC","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","data","items","totalCount","followUnfollowFlow","apiMethod","AC","response","resultCode","follow","bind","unfollow"],"sources":["C:/Dev/react/project1/src/redux/users-reducer.ts"],"sourcesContent":["import {userAPI} from '../components/api/api';\r\nimport {updateObjectInArray} from '../utials/object-helpers'\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = ' SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\ntype PhotosType = {\r\n  small:string | null\r\n  large:string | null\r\n}\r\ntype UserType = {\r\n  id: number\r\n  name:string\r\n  status:string\r\n  photos: PhotosType\r\n  followed:boolean\r\n}\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage:1,\r\n  isFetching:true,\r\n  folowingInProgress:[],\r\n}\r\n//users: updateObjectInArray(state.users,action.userId,'id',{followed:true})\r\n\r\n/*\r\nstate.users.map( u => {\r\n              if(u.id === action.userId) {\r\n                return {...u, followed:true}\r\n              }\r\n              return u\r\n            })\r\n            */\r\nconst usersReducer = (state = initialState,action) =>{\r\n    switch(action.type){\r\n      \r\n        case FOLLOW: {\r\n          return { \r\n            ...state, \r\n            users: updateObjectInArray(state.users,action.userId,'id',{followed:true})\r\n          }\r\n        }\r\n        case UNFOLLOW: {\r\n          return { \r\n            ...state, \r\n            users: updateObjectInArray(state.users,action.userId,'id',{followed:false})\r\n          }\r\n        }\r\n        case SET_USERS : {\r\n          return {\r\n            ...state, users:action.users \r\n          }\r\n        }\r\n        case SET_CURRENT_PAGE : {\r\n          return {\r\n            ...state, currentPage:action.currentPage \r\n          }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT : {\r\n          return {\r\n            ...state, totalUsersCount:action.totalUsersCount\r\n          }\r\n        }\r\n        case TOGGLE_IS_FETCHING : {\r\n          return {\r\n            ...state, isFetching:action.isFetching\r\n          }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS : {\r\n          return {\r\n            ...state, folowingInProgress:action.isFetching\r\n            ?[...state.folowingInProgress ,action.userId]\r\n            :[state.folowingInProgress.filter(id => id !== action.userId)]\r\n          }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n  }\r\n}\r\nexport const acceptFollow = (userId) => ({type:FOLLOW , userId})\r\nexport const acceptUnfollow = (userId) => ({type:UNFOLLOW,userId})\r\nexport const setUsersAC = (users) => ({type:SET_USERS,users})\r\nexport const setCurrentPage = (currentPage) => ({type:SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type:SET_TOTAL_USERS_COUNT, totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type:TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching,userId) => ({type:TOGGLE_IS_FOLLOWING_PROGRESS, isFetching,userId})\r\n\r\n\r\nexport const getUsers = (currentPage,pageSize) => { \r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(currentPage))\r\n    let data = await userAPI.getUsers(currentPage,pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsersAC(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n  }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch,userId,apiMethod,AC) => {\r\n  dispatch(toggleFollowingProgress(true,userId));\r\n  let response = await apiMethod(userId)\r\n    if(response.data.resultCode === 0) {\r\n      dispatch(AC(userId));\r\n    }\r\n  dispatch(toggleFollowingProgress(false,userId));\r\n}\r\n\r\nexport const follow = (userId) => { \r\n  return async (dispatch) =>  {\r\n    followUnfollowFlow(dispatch,userId,userAPI.follow.bind(userAPI),acceptFollow);\r\n  }\r\n}\r\nexport const unfollow = (userId) => { \r\n  return async (dispatch) =>  {\r\n    followUnfollowFlow(dispatch,userId,userAPI.unfollow.bind(userAPI),acceptUnfollow);\r\n  }\r\n}\r\nexport default usersReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}