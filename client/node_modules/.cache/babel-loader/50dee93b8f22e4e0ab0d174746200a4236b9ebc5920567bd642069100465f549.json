{"ast":null,"code":"import { authAPI, securityAPI } from './../components/api/api';\nimport { stopSubmit } from 'redux-form';\nconst SET_USER_DATA = 'react/auth/SET_USER_DATA';\nconst SET_CAPTCHA_URL = 'react/auth/SET_CAPTCHA_URL';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  captchaUrl: null\n};\nexport const authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.data\n      };\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.data\n      };\n    default:\n      return state;\n  }\n};\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  data: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const setACaptchaUrl = url => ({\n  type: SET_CAPTCHA_URL,\n  url\n});\nexport const getData = () => async dispatch => {\n  let response = await authAPI.getData();\n  if (response.resultCode === 0) {\n    let {\n      id,\n      login,\n      email\n    } = response.data;\n    dispatch(setAuthUserData(id, email, login, true));\n  }\n};\nexport const login = (email, password, rememberMe) => async dispatch => {\n  let response = await authAPI.login(email, password, rememberMe);\n  if (response.data.resultCode === 0) {\n    dispatch(getData());\n  } else {\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\n    dispatch(stopSubmit('login', {\n      _error: message\n    }));\n  }\n};\nexport const getCaptchaUrl = () => async dispatch => {\n  let response = await securityAPI.getCaptchaUrl();\n  const captchaUrl = response.data.url;\n};\nexport const loginout = () => async dispatch => {\n  let response = await authAPI.loginout();\n  if (response.data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["authAPI","securityAPI","stopSubmit","SET_USER_DATA","SET_CAPTCHA_URL","initialState","userId","email","login","isAuth","captchaUrl","authReducer","state","action","type","data","setAuthUserData","setACaptchaUrl","url","getData","dispatch","response","resultCode","id","password","rememberMe","message","messages","length","_error","getCaptchaUrl","loginout"],"sources":["C:/Dev/react/project1/src/redux/auth-reducer.js"],"sourcesContent":["import {authAPI,securityAPI} from './../components/api/api';\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'react/auth/SET_USER_DATA'\r\nconst SET_CAPTCHA_URL = 'react/auth/SET_CAPTCHA_URL'\r\n\r\nlet initialState =  {\r\n    userId:null,\r\n    email:null,\r\n    login:null,\r\n    isAuth:false,\r\n    captchaUrl:null,\r\n}\r\n\r\nexport const authReducer = (state = initialState,action) =>{\r\n  switch(action.type) {\r\n    case SET_USER_DATA: \r\n        return { \r\n            ...state,\r\n            ...action.data\r\n        }\r\n      case SET_USER_DATA: \r\n      return { \r\n          ...state,\r\n          ...action.data\r\n      }\r\n    default: \r\n        return state;\r\n  }\r\n}\r\nexport const setAuthUserData = (userId,email,login,isAuth) => ({\r\n  type:SET_USER_DATA, data:{userId,email,login,isAuth}\r\n})\r\nexport const setACaptchaUrl= (url) => ({\r\n  type:SET_CAPTCHA_URL, url\r\n})\r\nexport const getData = () => async (dispatch) => {\r\n   let response = await authAPI.getData();\r\n    if(response.resultCode === 0) {\r\n      let {id,login,email} = response.data;\r\n      \r\n      dispatch(setAuthUserData(id, email, login,true));\r\n  }\r\n}\r\nexport const login = (email,password,rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email,password,rememberMe);\r\n  if(response.data.resultCode === 0) {\r\n    dispatch(getData())\r\n  } else {\r\n    let message = response.data.messages.length > 0 ?response.data.messages[0]:'Some error'\r\n    dispatch(stopSubmit('login',{_error:message}))\r\n  }\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n  let response = await securityAPI.getCaptchaUrl();\r\n  const captchaUrl = response.data.url\r\n}\r\nexport const loginout = () => async (dispatch) => {\r\n    let response = await authAPI.loginout()\r\n    if(response.data.resultCode === 0) {\r\n      dispatch(setAuthUserData(null, null, null,false));\r\n  }\r\n}\r\nexport default authReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}