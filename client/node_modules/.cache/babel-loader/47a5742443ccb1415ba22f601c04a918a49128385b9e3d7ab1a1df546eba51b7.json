{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react\\\\schedule for the day\\\\client\\\\src\\\\components\\\\tablePage\\\\tablePageComponents\\\\Table\\\\Table.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from './Table.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { selectTable } from '../../../../redux/table-selectors';\nimport { v1 } from 'uuid';\nimport { getTable } from './../../../../redux/table-reducer';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = () => {\n  _s();\n  const table = useSelector(selectTable);\n  const dispatch = useDispatch();\n  const {\n    tableId\n  } = useParams();\n  useEffect(() => {\n    dispatch(getTable(tableId));\n  }, []);\n  console.log(table);\n  /*\r\n      useEffect(() => {\r\n          if(table.tableData.days[0] !== 'ã…¤') table.tableData.days.unshift('ã…¤')\r\n      },[table])\r\n  \r\n      const changeValue = (row:number,column:number,newValue:string) => {\r\n          let updatedData = table.tableData.data.map((rowData:any, index:number) => {\r\n              if (index === row) {\r\n                  let updatedStatus = [...rowData.status]; \r\n                  if (newValue === \"-\") {\r\n                      updatedStatus[column] = \"+\";\r\n                  } else if (newValue === \"+\") {\r\n                      updatedStatus[column] = \"-\";\r\n                  }\r\n                  return {\r\n                      ...rowData,\r\n                      status: updatedStatus,\r\n                  };\r\n              }\r\n              return rowData;\r\n          });\r\n      \r\n          const updatedTableData = {\r\n              ...table.tableData,\r\n              data: updatedData,\r\n          };\r\n      \r\n          const updatedTable = {\r\n              ...table,\r\n              tableData: updatedTableData,\r\n          };\r\n          dispatch(actions.updateTable(updatedTable));\r\n      }\r\n      const deleteTable = (id:string) => {\r\n          dispatch(deleteTable(id))\r\n      }\r\n      */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Object.keys(table).length === 0 ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/tables\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [table.title, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.bucket,\n          onClick: () => deleteTable(table._id),\n          children: \"\\uD83D\\uDDD1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: table.tableData.days.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: styles.th,\n              children: day\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 58\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: table.tableData.data.map((rowData, indexRow) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: styles.td,\n                children: rowData.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), rowData.status.map((value, indexValue) => {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: styles.td,\n                  onClick: event => changeValue(indexRow, indexValue, event.currentTarget.innerHTML),\n                  children: value\n                }, v1(), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 44\n                }, this);\n              })]\n            }, v1(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Table, \"zcv/6xKa46qUaNmmgXdQEI1hizU=\", false, function () {\n  return [useSelector, useDispatch, useParams];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useEffect","styles","useDispatch","useSelector","Navigate","useParams","selectTable","v1","getTable","Table","table","dispatch","tableId","console","log","Object","keys","length","container","title","bucket","deleteTable","_id","tableData","days","map","day","th","data","rowData","indexRow","td","name","status","value","indexValue","event","changeValue","currentTarget","innerHTML"],"sources":["C:/Dev/react/schedule for the day/client/src/components/tablePage/tablePageComponents/Table/Table.tsx"],"sourcesContent":["import React, { useEffect}  from 'react'\r\nimport styles from './Table.module.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navigate, useParams } from 'react-router-dom'\r\nimport { selectTable } from '../../../../redux/table-selectors'\r\nimport { actions, tableFullType} from '../../../../redux/tables-reducer'\r\nimport {v1} from 'uuid'\r\nimport { getTable } from './../../../../redux/table-reducer'\r\n\r\nconst Table = () => {\r\n    const table:tableFullType = useSelector(selectTable)\r\n    const dispatch = useDispatch()\r\n    const {tableId} = useParams()\r\n    \r\n    useEffect(() => {\r\n        dispatch(getTable(tableId))\r\n    },[])\r\n    console.log(table)\r\n/*\r\n    useEffect(() => {\r\n        if(table.tableData.days[0] !== 'ã…¤') table.tableData.days.unshift('ã…¤')\r\n    },[table])\r\n\r\n    const changeValue = (row:number,column:number,newValue:string) => {\r\n        let updatedData = table.tableData.data.map((rowData:any, index:number) => {\r\n            if (index === row) {\r\n                let updatedStatus = [...rowData.status]; \r\n                if (newValue === \"-\") {\r\n                    updatedStatus[column] = \"+\";\r\n                } else if (newValue === \"+\") {\r\n                    updatedStatus[column] = \"-\";\r\n                }\r\n                return {\r\n                    ...rowData,\r\n                    status: updatedStatus,\r\n                };\r\n            }\r\n            return rowData;\r\n        });\r\n    \r\n        const updatedTableData = {\r\n            ...table.tableData,\r\n            data: updatedData,\r\n        };\r\n    \r\n        const updatedTable = {\r\n            ...table,\r\n            tableData: updatedTableData,\r\n        };\r\n        dispatch(actions.updateTable(updatedTable));\r\n    }\r\n    const deleteTable = (id:string) => {\r\n        dispatch(deleteTable(id))\r\n    }\r\n    */\r\n    return (\r\n        <>\r\n        {Object.keys(table).length === 0 ? <Navigate to=\"/tables\" /> :\r\n        <div className={styles.container}>\r\n                <h2>{table.title}<span className={styles.bucket} onClick={() => deleteTable(table._id)}>ðŸ—‘</span></h2>\r\n            <table className={styles.table}>\r\n                <thead>\r\n                    <tr>\r\n                        {table.tableData.days.map(day => <th key={day} className={styles.th}>{day}</th>)}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {table.tableData.data.map((rowData,indexRow) => {\r\n                        return (\r\n                            <tr key={v1()}> \r\n                                <td className={styles.td}>{rowData.name}</td>\r\n                                {rowData.status.map((value,indexValue) => {\r\n                                    return <td key={v1()} className={styles.td} onClick={(event) => changeValue(indexRow,indexValue,event.currentTarget.innerHTML)}>{value}</td>\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>}\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Table"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}