{"ast":null,"code":"import { combineReducers, legacy_createStore as createStore } from \"redux\";\nimport planReducer from \"./plan-reducer.ts\";\nimport tablesReducer from \"./tables-reducer.ts\";\nimport createTableReducer from \"./createTable-reducer.js\";\nconst reducers = combineReducers({\n  planPage: planReducer,\n  tablesPage: tablesReducer,\n  createTable: createTableReducer\n});\nconst store = createStore(reducers);\n// @ts-ignore\nwindow.store = store;\nexport default store;","map":{"version":3,"names":["combineReducers","legacy_createStore","createStore","planReducer","tablesReducer","createTableReducer","reducers","planPage","tablesPage","createTable","store","window"],"sources":["C:/Dev/react/Schedule for the day/src/redux/redux-store.ts"],"sourcesContent":["import { combineReducers ,legacy_createStore as createStore} from \"redux\";\r\nimport planReducer from \"./plan-reducer.ts\";\r\nimport tablesReducer from \"./tables-reducer.ts\";\r\nimport createTableReducer from \"./createTable-reducer.js\";\r\n\r\ntype reducersType = typeof reducers\r\nexport type InferActionsType<T> = T extends {[key:string]: (...args:any[]) => infer U} ? U :never\r\nexport type AppStateType = ReturnType<reducersType>\r\n\r\nconst reducers = combineReducers({\r\n    planPage:planReducer,\r\n    tablesPage:tablesReducer,\r\n    createTable:createTableReducer\r\n})\r\n\r\n\r\nconst store = createStore(reducers)\r\n// @ts-ignore\r\nwindow.store = store\r\nexport default store"],"mappings":"AAAA,SAASA,eAAe,EAAEC,kBAAkB,IAAIC,WAAW,QAAO,OAAO;AACzE,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,OAAOC,kBAAkB,MAAM,0BAA0B;AAMzD,MAAMC,QAAQ,GAAGN,eAAe,CAAC;EAC7BO,QAAQ,EAACJ,WAAW;EACpBK,UAAU,EAACJ,aAAa;EACxBK,WAAW,EAACJ;AAChB,CAAC,CAAC;AAGF,MAAMK,KAAK,GAAGR,WAAW,CAACI,QAAQ,CAAC;AACnC;AACAK,MAAM,CAACD,KAAK,GAAGA,KAAK;AACpB,eAAeA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}