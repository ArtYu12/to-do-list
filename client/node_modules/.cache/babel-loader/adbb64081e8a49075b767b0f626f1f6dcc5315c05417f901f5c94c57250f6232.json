{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react\\\\project1\\\\src\\\\components\\\\dialogs\\\\Dialogs.tsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport Message from './Message/Message';\nimport DialogItem from './DialogItem/DialogItem';\nimport { reduxForm } from 'redux-form';\nimport { Textarea, createField } from '../common/formsControls/formsControsl.tsx';\nimport { maxLengthCreator, requered } from '../../utials/validators/validators.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength20 = maxLengthCreator(20);\nconst Dialogs = props => {\n  let state = props.dialogsPage;\n  let dialogsElements = state.dialogs.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: dialog.name,\n    id: dialog.id\n  }, dialog.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 25\n  }, this));\n  let messagesElements = state.messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n    message: message.message\n  }, message.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 26\n  }, this));\n  let onSubmit = formData => {\n    props.addMessage(formData.message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.h\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.parent,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: s.dialogs,\n        children: dialogsElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: s.messages,\n        children: [messagesElements, /*#__PURE__*/_jsxDEV(MessageReduxForm, {\n          onSubmit: onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_c = Dialogs;\nlet dialogForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [createField('Enter your message', 'message', Textarea, [requered, maxLength20], {}, ''), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\nlet MessageReduxForm = reduxForm({\n  form: 'DialogAddMessageForm'\n})(dialogForm);\n_c2 = MessageReduxForm;\nexport default Dialogs;\nvar _c, _c2;\n$RefreshReg$(_c, \"Dialogs\");\n$RefreshReg$(_c2, \"MessageReduxForm\");","map":{"version":3,"names":["React","s","Message","DialogItem","reduxForm","Textarea","createField","maxLengthCreator","requered","maxLength20","Dialogs","props","state","dialogsPage","dialogsElements","dialogs","map","dialog","name","id","messagesElements","messages","message","onSubmit","formData","addMessage","h","parent","dialogForm","handleSubmit","MessageReduxForm","form"],"sources":["C:/Dev/react/project1/src/components/dialogs/Dialogs.tsx"],"sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport {reduxForm,Field, InjectedFormProps} from 'redux-form'\r\nimport {Textarea, createField} from '../common/formsControls/formsControsl.tsx'\r\nimport {maxLengthCreator, requered} from '../../utials/validators/validators.ts'\r\nimport { InitialStateType } from '../../redux/dialogs-reducer';\r\nimport { LoginFormValuesType } from '../login/Login';\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\ntype OwnPropsType = {\r\n    dialogsPage:InitialStateType\r\n    h:string\r\n    addMessage:(message:string) => void\r\n}\r\nconst Dialogs:React.FC<OwnPropsType> = (props) =>{\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    \r\n    let messagesElements = state.messages\r\n        .map( message => <Message message={message.message} key={message.id}/>);  \r\n        \r\n\r\n\r\n        \r\n    let onSubmit = (formData:NewMessageFormType) => {\r\n        props.addMessage(formData.message);\r\n    }\r\n        return (\r\n        <section>\r\n            <h2>{props.h}</h2>\r\n            <div className={s.parent}>\r\n                    <ul  className={s.dialogs}>\r\n                        {dialogsElements}\r\n                    </ul>\r\n                    <ul className={s.messages}>\r\n                        {messagesElements}\r\n                        <MessageReduxForm onSubmit={onSubmit}/>\r\n                    </ul>\r\n\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\nexport type NewMessageFormType = {\r\n    message:string\r\n}\r\ntype NewMessageFormPropertiesType = Extract<keyof NewMessageFormType,string>;\r\nlet dialogForm:React.FC<InjectedFormProps<LoginFormValuesType,LoginFormOwnPropsType> & LoginFormOwnPropsType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField<NewMessageFormPropertiesType>('Enter your message','message',Textarea,[requered,maxLength20],{},'')}\r\n        <br />\r\n        <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\nlet MessageReduxForm = reduxForm({\r\n    form:'DialogAddMessageForm'\r\n})(dialogForm)\r\n\r\nexport default Dialogs"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,sBAAsB;AACpC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAAQC,SAAS,QAAgC,YAAY;AAC7D,SAAQC,QAAQ,EAAEC,WAAW,QAAO,2CAA2C;AAC/E,SAAQC,gBAAgB,EAAEC,QAAQ,QAAO,uCAAuC;AAAA;AAIhF,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,EAAE,CAAC;AAOxC,MAAMG,OAA8B,GAAIC,KAAK,IAAI;EAE7C,IAAIC,KAAK,GAAGD,KAAK,CAACE,WAAW;EAE7B,IAAIC,eAAe,GAAGF,KAAK,CAACG,OAAO,CAC9BC,GAAG,CAAEC,MAAM,iBAAI,QAAC,UAAU;IAAC,IAAI,EAAEA,MAAM,CAACC,IAAK;IAAiB,EAAE,EAAED,MAAM,CAACE;EAAG,GAAzBF,MAAM,CAACE,EAAE;IAAA;IAAA;IAAA;EAAA,QAAmB,CAAC;EAErF,IAAIC,gBAAgB,GAAGR,KAAK,CAACS,QAAQ,CAChCL,GAAG,CAAEM,OAAO,iBAAI,QAAC,OAAO;IAAC,OAAO,EAAEA,OAAO,CAACA;EAAQ,GAAMA,OAAO,CAACH,EAAE;IAAA;IAAA;IAAA;EAAA,QAAG,CAAC;EAK3E,IAAII,QAAQ,GAAIC,QAA2B,IAAK;IAC5Cb,KAAK,CAACc,UAAU,CAACD,QAAQ,CAACF,OAAO,CAAC;EACtC,CAAC;EACG,oBACA;IAAA,wBACI;MAAA,UAAKX,KAAK,CAACe;IAAC;MAAA;MAAA;MAAA;IAAA,QAAM,eAClB;MAAK,SAAS,EAAEzB,CAAC,CAAC0B,MAAO;MAAA,wBACjB;QAAK,SAAS,EAAE1B,CAAC,CAACc,OAAQ;QAAA,UACrBD;MAAe;QAAA;QAAA;QAAA;MAAA,QACf,eACL;QAAI,SAAS,EAAEb,CAAC,CAACoB,QAAS;QAAA,WACrBD,gBAAgB,eACjB,QAAC,gBAAgB;UAAC,QAAQ,EAAEG;QAAS;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACtC;IAAA;MAAA;MAAA;MAAA;IAAA,QAEP;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;AAElB,CAAC;AAAA,KAhCKb,OAA8B;AAqCpC,IAAIkB,UAAyG,GAAIjB,KAAK,IAAK;EACvH,oBACI;IAAM,QAAQ,EAAEA,KAAK,CAACkB,YAAa;IAAA,WAC9BvB,WAAW,CAA+B,oBAAoB,EAAC,SAAS,EAACD,QAAQ,EAAC,CAACG,QAAQ,EAACC,WAAW,CAAC,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,eACpH;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,UAAQ;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACd;AAEf,CAAC;AACD,IAAIqB,gBAAgB,GAAG1B,SAAS,CAAC;EAC7B2B,IAAI,EAAC;AACT,CAAC,CAAC,CAACH,UAAU,CAAC;AAAA,MAFVE,gBAAgB;AAIpB,eAAepB,OAAO;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}