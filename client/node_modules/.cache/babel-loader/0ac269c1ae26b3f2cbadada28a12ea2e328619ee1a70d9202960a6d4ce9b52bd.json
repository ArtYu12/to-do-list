{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react\\\\project1\\\\src\\\\components\\\\common\\\\paginator\\\\Paginator.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport s from './Paginator.module.css';\nimport { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Paginator = props => {\n  _s();\n  let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\n  let pages = [];\n  for (let cnt = 1; cnt <= pagesCount; cnt++) {\n    pages.push(cnt);\n  }\n  let portionCount = Math.ceil(pagesCount / props.portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (props.currentPage - 1) * props.portionSize + 1;\n  let rightPortionPageNumber = portionNumber * props.portionSize;\n  console.log(leftPortionPageNumber, rightPortionPageNumber, portionNumber, portionCount);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"PREW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: s.ol,\n      children: pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: props.currentPage === p && s.selectedPage,\n          onClick: e => {\n            props.onPageChanged(p);\n          },\n          children: p\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      },\n      children: \"NEXT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true);\n};\n_s(Paginator, \"PqSpRormX9bOdHL/iV6zF/npLhc=\");\n_c = Paginator;\nexport default Paginator;\nvar _c;\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"names":["React","s","useState","Paginator","props","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","cnt","push","portionCount","portionSize","portionNumber","setPortionNumber","leftPortionPageNumber","currentPage","rightPortionPageNumber","console","log","ol","filter","p","map","selectedPage","e","onPageChanged"],"sources":["C:/Dev/react/project1/src/components/common/paginator/Paginator.jsx"],"sourcesContent":["import React from 'react';\r\nimport s from './Paginator.module.css';\r\nimport {useState} from 'react'\r\n\r\nlet Paginator = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n    let pages = [];\r\n    for(let cnt = 1; cnt <= pagesCount; cnt++){\r\n        pages.push(cnt);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    let [portionNumber,setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (props.currentPage - 1) * props.portionSize + 1\r\n    let rightPortionPageNumber = portionNumber* props.portionSize\r\nconsole.log(leftPortionPageNumber,rightPortionPageNumber,portionNumber,portionCount)\r\n    return (\r\n    <>\r\n\r\n        {portionNumber > 1 && <button onClick={ () => {setPortionNumber(portionNumber-1)}}>PREW</button>}\r\n        <ol className={s.ol}>\r\n            { pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map((p) => {\r\n                return <li className = {props.currentPage === p && s.selectedPage} onClick={(e) => {props.onPageChanged(p)}}>{p}</li>\r\n            })}\r\n        </ol>\r\n        {portionCount > portionNumber && <button onClick={ () => {setPortionNumber(portionNumber+1)}}>NEXT</button>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\nexport default Paginator;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,wBAAwB;AACtC,SAAQC,QAAQ,QAAO,OAAO;AAAA;AAAA;AAE9B,IAAIC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAEvB,IAAIC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACH,KAAK,CAACI,eAAe,GAAGJ,KAAK,CAACK,QAAQ,CAAC;EAClE,IAAIC,KAAK,GAAG,EAAE;EACd,KAAI,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAIN,UAAU,EAAEM,GAAG,EAAE,EAAC;IACtCD,KAAK,CAACE,IAAI,CAACD,GAAG,CAAC;EACnB;EACA,IAAIE,YAAY,GAAGP,IAAI,CAACC,IAAI,CAACF,UAAU,GAAGD,KAAK,CAACU,WAAW,CAAC;EAC5D,IAAI,CAACC,aAAa,EAACC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAClD,IAAIe,qBAAqB,GAAG,CAACb,KAAK,CAACc,WAAW,GAAG,CAAC,IAAId,KAAK,CAACU,WAAW,GAAG,CAAC;EAC3E,IAAIK,sBAAsB,GAAGJ,aAAa,GAAEX,KAAK,CAACU,WAAW;EACjEM,OAAO,CAACC,GAAG,CAACJ,qBAAqB,EAACE,sBAAsB,EAACJ,aAAa,EAACF,YAAY,CAAC;EAChF,oBACA;IAAA,WAEKE,aAAa,GAAG,CAAC,iBAAI;MAAQ,OAAO,EAAG,MAAM;QAACC,gBAAgB,CAACD,aAAa,GAAC,CAAC,CAAC;MAAA,CAAE;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS,eAChG;MAAI,SAAS,EAAEd,CAAC,CAACqB,EAAG;MAAA,UACdZ,KAAK,CAACa,MAAM,CAACC,CAAC,IAAIA,CAAC,IAAIP,qBAAqB,IAAIO,CAAC,IAAIL,sBAAsB,CAAC,CAACM,GAAG,CAAED,CAAC,IAAK;QACtF,oBAAO;UAAI,SAAS,EAAIpB,KAAK,CAACc,WAAW,KAAKM,CAAC,IAAIvB,CAAC,CAACyB,YAAa;UAAC,OAAO,EAAGC,CAAC,IAAK;YAACvB,KAAK,CAACwB,aAAa,CAACJ,CAAC,CAAC;UAAA,CAAE;UAAA,UAAEA;QAAC;UAAA;UAAA;UAAA;QAAA,QAAM;MACzH,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACD,EACJX,YAAY,GAAGE,aAAa,iBAAI;MAAQ,OAAO,EAAG,MAAM;QAACC,gBAAgB,CAACD,aAAa,GAAC,CAAC,CAAC;MAAA,CAAE;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBAE5G;AAEP,CAAC;AAAA,GAzBGZ,SAAS;AAAA,KAATA,SAAS;AA2Bb,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}