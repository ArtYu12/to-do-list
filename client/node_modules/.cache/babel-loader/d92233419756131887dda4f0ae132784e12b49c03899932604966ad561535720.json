{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react\\\\project1\\\\src\\\\components\\\\login\\\\Login.tsx\";\nimport React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { Input, LoginFormValuesType, createField } from '../common/formsControls/formsControsl.tsx';\nimport { requered, maxLengthCreator } from '../../utials/validators/validators.ts';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer.ts';\nimport { Navigate } from 'react-router-dom';\nimport s from './../common/formsControls/formsControls.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength10 = maxLengthCreator(10);\nconst LoginForm = _ref => {\n  let {\n    handleSubmit,\n    error,\n    captchaUrl\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [createField('Login', 'email', Input, [requered], {}, ''), createField('Password', 'password', Input, [requered, maxLength10], {\n      type: 'password'\n    }, ''), createField(undefined, 'rememberMe', Input, [], {\n      type: 'checkbox'\n    }, 'remember me'), captchaUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: captchaUrl,\n      alt: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 32\n    }, this), captchaUrl && createField('Symbols', 'captcha', Input, [requered], {}, ''), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.formSummaryError,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n};\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n_c2 = LoginReduxForm;\nconst Login = props => {\n  /*#__PURE__*/_jsxDEV(COSNT, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n  };\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.h\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit,\n      captchaUrl: props.captchaUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 14\n  }, this);\n};\n_c3 = Login;\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth,\n  captchaUrl: state.auth.captchaUrl\n});\nexport default connect(mapStateToProps, {\n  login\n})(Login);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"LoginReduxForm\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"names":["React","reduxForm","Input","LoginFormValuesType","createField","requered","maxLengthCreator","connect","login","Navigate","s","maxLength10","LoginForm","handleSubmit","error","captchaUrl","type","undefined","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","captcha","isAuth","h","mapStateToProps","state","auth"],"sources":["C:/Dev/react/project1/src/components/login/Login.tsx"],"sourcesContent":["import React from 'react'\r\nimport {InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {GetStringCase, Input, LoginFormValuesType,createField} from '../common/formsControls/formsControsl.tsx'\r\nimport {requered,maxLengthCreator} from '../../utials/validators/validators.ts'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../redux/auth-reducer.ts'\r\nimport { Navigate } from 'react-router-dom'\r\nimport s from './../common/formsControls/formsControls.module.css'\r\nimport { AppStateType } from '../../redux/redux-store.ts'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\ntype LoginFormOwnPropsType = {\r\n    captchaUrl:string | null\r\n}\r\nconst LoginForm:React.FC<InjectedFormProps<LoginFormValuesType,LoginFormOwnPropsType> & LoginFormOwnPropsType> = ({handleSubmit,error,captchaUrl}) => {\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                {createField<LoginFormPropertiesType>('Login','email',Input,[requered],{},'')}\r\n                {createField<LoginFormPropertiesType>('Password','password',Input,[requered,maxLength10],{type:'password'},'')}\r\n                {createField<LoginFormPropertiesType>(undefined,'rememberMe',Input,[],{type:'checkbox'},'remember me')}\r\n                {captchaUrl && <img src={captchaUrl} alt=\"1\"/>}\r\n                {captchaUrl && createField<LoginFormPropertiesType>('Symbols','captcha',Input,[requered],{},'')}\r\n                {error &&\r\n                <div className={s.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n                <div>   \r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType,LoginFormOwnPropsType>({\r\n    form:'login'\r\n})(LoginForm)\r\n\r\nconst Login:React.FC<MapStatePropsType & MapDispatchPropsType & OwnProps> = (props) => {\r\n\r\n    <COSNT></COSNT>\r\n    const onSubmit = (formData:any) => {\r\n        props.login(formData.email,formData.password,formData.rememberMe,formData.captcha)\r\n    }\r\n    if(props.isAuth) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n    return ( <section>\r\n            <h2>{props.h}</h2>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\ntype MapStatePropsType = {\r\n    captchaUrl:string | null\r\n    isAuth:boolean\r\n}\r\ntype OwnProps = {\r\n    h:string\r\n}\r\nexport type LoginFormValuesType = {\r\n    email:string\r\n    password:string\r\n    rememberMe:boolean\r\n    captcha:string | any\r\n}\r\ntype LoginFormPropertiesType = GetStringCase<LoginFormValuesType>\r\n\r\ntype MapDispatchPropsType = {\r\n     login: (email:string,password:string,rememberMe:boolean,captcha:string | any) => void\r\n\r\n}\r\nconst mapStateToProps = (state:AppStateType):MapStatePropsType => ({\r\n    isAuth:state.auth.isAuth,\r\n    captchaUrl:state.auth.captchaUrl\r\n})\r\nexport default connect(mapStateToProps,{login})(Login)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}