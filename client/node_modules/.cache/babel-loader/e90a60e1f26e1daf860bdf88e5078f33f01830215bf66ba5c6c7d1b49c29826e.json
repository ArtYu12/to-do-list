{"ast":null,"code":"const SET_NEW_PURPOSE = 'SET_NEW_PURPOSE';\nconst DELETE_PURPOSE = 'DELETE_PURPOSE';\nconst SET_TODOS = 'SET_TODOS';\nconst initialState = {\n  todos: []\n};\nconst planReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_NEW_PURPOSE:\n      {\n        return {\n          ...state,\n          todos: [action.purpose, ...state.todos]\n        };\n      }\n    case DELETE_PURPOSE:\n      {\n        return {\n          ...state,\n          todos: state.todos.filter(item => item != action.purpose)\n        };\n      }\n    case SET_TODOS:\n      {\n        return {\n          ...state,\n          todos: action.todos\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const actions = {\n  setNewPurpose: purpose => ({\n    type: SET_NEW_PURPOSE,\n    purpose\n  }),\n  deletePurpose: purpose => ({\n    type: DELETE_PURPOSE,\n    purpose\n  })\n};\nexport default planReducer;","map":{"version":3,"names":["SET_NEW_PURPOSE","DELETE_PURPOSE","SET_TODOS","initialState","todos","planReducer","state","action","type","purpose","filter","item","actions","setNewPurpose","deletePurpose"],"sources":["C:/Dev/react/Schedule for the day/client/src/redux/plan-reducer.ts"],"sourcesContent":["import { Todo } from \"../components/planPage/types/types\"\r\nimport { InferActionsType } from \"./redux-store\"\r\n\r\ntype ActionsType = InferActionsType<typeof actions>\r\ntype InitialStateType = typeof initialState\r\n\r\nconst SET_NEW_PURPOSE = 'SET_NEW_PURPOSE'\r\nconst DELETE_PURPOSE = 'DELETE_PURPOSE'\r\nconst SET_TODOS = 'SET_TODOS'\r\n\r\nconst initialState = {\r\n    todos:[] as Array<Todo>\r\n}\r\n\r\nconst planReducer = (state:InitialStateType = initialState,action:ActionsType):InitialStateType => {\r\n    switch(action.type) {\r\n        case SET_NEW_PURPOSE : {\r\n            return { ...state,\r\n                todos:[action.purpose,...state.todos]\r\n            }\r\n        }\r\n        case DELETE_PURPOSE : {\r\n            return {\r\n                ...state,\r\n                todos:state.todos.filter((item) => item != action.purpose)\r\n            }\r\n        }\r\n        case SET_TODOS : {\r\n            return {\r\n                ...state,\r\n                todos: action.todos\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setNewPurpose:(purpose:Todo) => ({type:SET_NEW_PURPOSE,purpose}),\r\n    deletePurpose:(purpose:Todo) => ({type:DELETE_PURPOSE,purpose}),\r\n}\r\n\r\nexport default planReducer"],"mappings":"AAMA,MAAMA,eAAe,GAAG,iBAAiB;AACzC,MAAMC,cAAc,GAAG,gBAAgB;AACvC,MAAMC,SAAS,GAAG,WAAW;AAE7B,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAC;AACV,CAAC;AAED,MAAMC,WAAW,GAAG,YAA+E;EAAA,IAA9EC,KAAsB,uEAAGH,YAAY;EAAA,IAACI,MAAkB;EACzE,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKR,eAAe;MAAG;QACnB,OAAO;UAAE,GAAGM,KAAK;UACbF,KAAK,EAAC,CAACG,MAAM,CAACE,OAAO,EAAC,GAAGH,KAAK,CAACF,KAAK;QACxC,CAAC;MACL;IACA,KAAKH,cAAc;MAAG;QAClB,OAAO;UACH,GAAGK,KAAK;UACRF,KAAK,EAACE,KAAK,CAACF,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,IAAIJ,MAAM,CAACE,OAAO;QAC7D,CAAC;MACL;IACA,KAAKP,SAAS;MAAG;QACb,OAAO;UACH,GAAGI,KAAK;UACRF,KAAK,EAAEG,MAAM,CAACH;QAClB,CAAC;MACL;IACA;MAAS;QACL,OAAOE,KAAK;MAChB;EAAC;AAET,CAAC;AAED,OAAO,MAAMM,OAAO,GAAG;EACnBC,aAAa,EAAEJ,OAAY,KAAM;IAACD,IAAI,EAACR,eAAe;IAACS;EAAO,CAAC,CAAC;EAChEK,aAAa,EAAEL,OAAY,KAAM;IAACD,IAAI,EAACP,cAAc;IAACQ;EAAO,CAAC;AAClE,CAAC;AAED,eAAeJ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}