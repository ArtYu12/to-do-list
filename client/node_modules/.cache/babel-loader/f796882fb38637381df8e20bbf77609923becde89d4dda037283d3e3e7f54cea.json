{"ast":null,"code":"import { tableAPI } from \"api/tables/tables-api\";\nconst SET_TABLE = 'SET_TABLE';\nconst initialState = {\n  table: {}\n};\nconst tableReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_TABLE:\n      {\n        return {\n          ...state,\n          table: action.table\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};\nconst actions = {\n  setTable: table => ({\n    type: SET_TABLE,\n    table\n  })\n};\nconst getTable = id => async dispatch => {\n  const response = await tableAPI.getTable(id);\n};\nexport default tableReducer;","map":{"version":3,"names":["tableAPI","SET_TABLE","initialState","table","tableReducer","state","action","type","actions","setTable","getTable","id","dispatch","response"],"sources":["C:/Dev/react/Schedule for the day/client/src/redux/table-reducer.ts"],"sourcesContent":["import { tableAPI } from \"api/tables/tables-api\";\r\nimport { AppStateType, BaseThunkType, InferActionsType } from \"./redux-store\";\r\nimport { tableFullType } from \"./tables-reducer\";\r\n\r\nconst SET_TABLE = 'SET_TABLE'\r\n\r\ntype ActionsType = InferActionsType<typeof actions>\r\ntype InitialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n\r\nconst initialState = {\r\n    table:{} as tableFullType\r\n}\r\n\r\nconst tableReducer = (state:InitialStateType = initialState, action:ActionsType):InitialStateType => {\r\n    switch(action.type) {\r\n        case SET_TABLE : {\r\n            return {\r\n                ...state,\r\n                table:action.table\r\n            }\r\n        }\r\n        default : {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst actions = {\r\n    setTable:(table:tableFullType) => ({type:SET_TABLE,table})\r\n}\r\n\r\nconst getTable = (id:string) => async (dispatch) => {\r\n    const response = await tableAPI.getTable(id)\r\n}\r\n\r\n\r\n\r\nexport default tableReducer"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAIhD,MAAMC,SAAS,GAAG,WAAW;AAM7B,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAC,CAAC;AACX,CAAC;AAED,MAAMC,YAAY,GAAG,YAAgF;EAAA,IAA/EC,KAAsB,uEAAGH,YAAY;EAAA,IAAEI,MAAkB;EAC3E,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKN,SAAS;MAAG;QACb,OAAO;UACH,GAAGI,KAAK;UACRF,KAAK,EAACG,MAAM,CAACH;QACjB,CAAC;MACL;IACA;MAAU;QACN,OAAOE,KAAK;MAChB;EAAC;AAET,CAAC;AAKD,MAAMG,OAAO,GAAG;EACZC,QAAQ,EAAEN,KAAmB,KAAM;IAACI,IAAI,EAACN,SAAS;IAACE;EAAK,CAAC;AAC7D,CAAC;AAED,MAAMO,QAAQ,GAAIC,EAAS,IAAK,MAAOC,QAAQ,IAAK;EAChD,MAAMC,QAAQ,GAAG,MAAMb,QAAQ,CAACU,QAAQ,CAACC,EAAE,CAAC;AAChD,CAAC;AAID,eAAeP,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}