{"ast":null,"code":"import { instanse } from './api.ts';\nexport const profileAPI = {\n  getProfile(profileId) {\n    return instanse.get(`profile/${profileId}`).then(res => res.data);\n  },\n  getStatus(profileId) {\n    return instanse.get(`profile/status/${profileId}`).then(res => res.data);\n  },\n  updateStatus(status) {\n    return instanse.put(`profile/status`, {\n      status: status\n    }).then(res => res.data);\n  },\n  savePhoto(photoFile) {\n    let formData = new FormData();\n    formData.append('image', photoFile);\n    return instanse.put(`profile/photo`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => res.data);\n  },\n  saveProfile(profile) {\n    return instanse.put(`profile`, profile).then(res => res.data);\n  }\n};","map":{"version":3,"names":["instanse","profileAPI","getProfile","profileId","get","then","res","data","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","headers","saveProfile","profile"],"sources":["C:/Dev/react/project1/src/components/api/profile-api.ts"],"sourcesContent":["import {instanse,ResponseType,ResultCodeEnum,ResultCodeWithCaptchaEnum} from './api.ts'\r\nimport { PhotosType, ProfileType } from \"../../types/types\"\r\n\r\n\r\ntype SavePhotoType = {\r\n    photos:PhotosType\r\n}\r\nexport const profileAPI = {\r\n    getProfile(profileId:number) {\r\n        return instanse.get<ProfileType>(`profile/${profileId}`).then(res => res.data);\r\n    },\r\n    getStatus(profileId:number) {\r\n        return instanse.get<string>(`profile/status/${profileId}`).then(res => res.data);\r\n    },\r\n    updateStatus(status:string) {\r\n        return instanse.put<ResponseType>(`profile/status`,{status:status}).then(res => res.data);\r\n    },\r\n    savePhoto(photoFile:any) {\r\n        let formData = new FormData();\r\n        formData.append('image',photoFile)\r\n        return instanse.put<ResponseType<SavePhotoType>>(`profile/photo`,formData,{\r\n            headers:{\r\n                'Content-Type':'multipart/form-data'\r\n            }\r\n        }).then(res => res.data);\r\n    },\r\n    saveProfile(profile:ProfileType) {\r\n        return instanse.put<ResponseType>(`profile`,profile).then(res => res.data);\r\n    },\r\n}"],"mappings":"AAAA,SAAQA,QAAQ,QAA6D,UAAU;AAOvF,OAAO,MAAMC,UAAU,GAAG;EACtBC,UAAU,CAACC,SAAgB,EAAE;IACzB,OAAOH,QAAQ,CAACI,GAAG,CAAe,WAAUD,SAAU,EAAC,CAAC,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;EAClF,CAAC;EACDC,SAAS,CAACL,SAAgB,EAAE;IACxB,OAAOH,QAAQ,CAACI,GAAG,CAAU,kBAAiBD,SAAU,EAAC,CAAC,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;EACpF,CAAC;EACDE,YAAY,CAACC,MAAa,EAAE;IACxB,OAAOV,QAAQ,CAACW,GAAG,CAAgB,gBAAe,EAAC;MAACD,MAAM,EAACA;IAAM,CAAC,CAAC,CAACL,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;EAC7F,CAAC;EACDK,SAAS,CAACC,SAAa,EAAE;IACrB,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC7BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAACH,SAAS,CAAC;IAClC,OAAOb,QAAQ,CAACW,GAAG,CAA+B,eAAc,EAACG,QAAQ,EAAC;MACtEG,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB;IACJ,CAAC,CAAC,CAACZ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;EAC5B,CAAC;EACDW,WAAW,CAACC,OAAmB,EAAE;IAC7B,OAAOnB,QAAQ,CAACW,GAAG,CAAgB,SAAQ,EAACQ,OAAO,CAAC,CAACd,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;EAC9E;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}