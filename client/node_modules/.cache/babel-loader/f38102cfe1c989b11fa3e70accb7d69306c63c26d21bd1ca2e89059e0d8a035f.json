{"ast":null,"code":"import { userAPI } from '../components/api/users-api.ts';\nimport { updateObjectInArray } from '../utials/object-helpers';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = ' SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  folowingInProgress: boolean | Array //array of users id\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FOLLOW:\n      {\n        return {\n          ...state,\n          users: updateObjectInArray(state.users, action.userId, 'id', {\n            followed: true\n          })\n        };\n      }\n    case UNFOLLOW:\n      {\n        return {\n          ...state,\n          users: updateObjectInArray(state.users, action.userId, 'id', {\n            followed: false\n          })\n        };\n      }\n    case SET_USERS:\n      {\n        return {\n          ...state,\n          users: action.users\n        };\n      }\n    case SET_CURRENT_PAGE:\n      {\n        return {\n          ...state,\n          currentPage: action.currentPage\n        };\n      }\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return {\n          ...state,\n          totalUsersCount: action.totalUsersCount\n        };\n      }\n    case TOGGLE_IS_FETCHING:\n      {\n        return {\n          ...state,\n          isFetching: action.isFetching\n        };\n      }\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return {\n          ...state,\n          folowingInProgress: action.isFetching ? [...state.folowingInProgress, action.userId] : [state.folowingInProgress.filter(id => id !== action.userId)]\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const actions = {\n  acceptFollow: userId => ({\n    type: FOLLOW,\n    userId\n  }),\n  acceptUnfollow: userId => ({\n    type: UNFOLLOW,\n    userId\n  }),\n  setUsersAC: users => ({\n    type: SET_USERS,\n    users\n  }),\n  setCurrentPage: currentPage => ({\n    type: SET_CURRENT_PAGE,\n    currentPage\n  }),\n  setTotalUsersCount: totalUsersCount => ({\n    type: SET_TOTAL_USERS_COUNT,\n    totalUsersCount\n  }),\n  toggleIsFetching: isFetching => ({\n    type: TOGGLE_IS_FETCHING,\n    isFetching\n  }),\n  toggleFollowingProgress: (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n  })\n};\nexport const getUsers = (currentPage, pageSize) => {\n  return async (dispatch, getState) => {\n    dispatch(actions.toggleIsFetching(true));\n    dispatch(actions.setCurrentPage(currentPage));\n    let data = await userAPI.getUsers(currentPage, pageSize);\n    dispatch(actions.toggleIsFetching(false));\n    dispatch(actions.setUsersAC(data.items));\n    dispatch(actions.setTotalUsersCount(data.totalCount));\n  };\n};\nconst _followUnfollowFlow = async (dispatch, userId, apiMethod, AC) => {\n  dispatch(actions.toggleFollowingProgress(true, userId));\n  let response = await apiMethod(userId);\n  if (response.data.resultCode === 0) {\n    dispatch(AC(userId));\n  }\n  dispatch(actions.toggleFollowingProgress(false, userId));\n};\nexport const follow = userId => {\n  return async dispatch => {\n    _followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), actions.acceptFollow);\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    _followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userAPI), actions.acceptUnfollow);\n  };\n};\nexport default usersReducer;","map":{"version":3,"names":["userAPI","updateObjectInArray","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","folowingInProgress","boolean","Array","usersReducer","state","action","type","userId","followed","filter","id","actions","acceptFollow","acceptUnfollow","setUsersAC","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","getState","data","items","totalCount","_followUnfollowFlow","apiMethod","AC","response","resultCode","follow","bind","unfollow"],"sources":["C:/Dev/react/project1/src/redux/users-reducer.ts"],"sourcesContent":["import { Dispatch } from 'redux';\r\nimport {userAPI} from '../components/api/users-api.ts';\r\nimport {updateObjectInArray} from '../utials/object-helpers'\r\nimport {UserType} from './../types/types.ts'\r\nimport { AppStateType, BaseThunkType, InferActionsType } from './redux-store.ts';\r\nimport { ThunkAction } from 'redux-thunk';\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = ' SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n  users:[] as Array<UserType>,\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage:1,\r\n  isFetching:true,\r\n  folowingInProgress:boolean | Array<number>//array of users id\r\n}\r\ntype initialStateType = typeof initialState\r\ntype ActionsType = InferActionsType<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n\r\nconst usersReducer = (state:initialStateType = initialState,action:ActionsType):initialStateType =>{\r\n    switch(action.type){\r\n      \r\n        case FOLLOW: {\r\n          return { \r\n            ...state, \r\n            users: updateObjectInArray(state.users,action.userId,'id',{followed:true})\r\n          }\r\n        }\r\n        case UNFOLLOW: {\r\n          return { \r\n            ...state, \r\n            users: updateObjectInArray(state.users,action.userId,'id',{followed:false})\r\n          }\r\n        }\r\n        case SET_USERS : {\r\n          return {\r\n            ...state, users:action.users \r\n          }\r\n        }\r\n        case SET_CURRENT_PAGE : {\r\n          return {\r\n            ...state, currentPage:action.currentPage \r\n          }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT : {\r\n          return {\r\n            ...state, totalUsersCount:action.totalUsersCount\r\n          }\r\n        }\r\n        case TOGGLE_IS_FETCHING : {\r\n          return {\r\n            ...state, isFetching:action.isFetching\r\n          }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS : {\r\n          return {\r\n            ...state, folowingInProgress:action.isFetching\r\n            ?[...state.folowingInProgress ,action.userId]\r\n            :[state.folowingInProgress.filter(id => id !== action.userId)]\r\n          }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  acceptFollow:(userId:number) => ({type:FOLLOW , userId} as const),\r\n  acceptUnfollow: (userId:number) => ({type:UNFOLLOW,userId} as const),\r\n  setUsersAC: (users:Array<UserType>) => ({type:SET_USERS,users} as const),\r\n  setCurrentPage: (currentPage:number) => ({type:SET_CURRENT_PAGE, currentPage} as const),\r\n  setTotalUsersCount: (totalUsersCount:number) => ({type:SET_TOTAL_USERS_COUNT, totalUsersCount} as const),\r\n  toggleIsFetching: (isFetching:boolean) => ({type:TOGGLE_IS_FETCHING, isFetching} as const),\r\n  toggleFollowingProgress:(isFetching:boolean,userId:number) => ({type:TOGGLE_IS_FOLLOWING_PROGRESS, isFetching,userId} as const)\r\n}\r\n\r\nexport const getUsers = (currentPage:number,pageSize:number):ThunkType => { \r\n  return async (dispatch,getState) => {\r\n    dispatch(actions.toggleIsFetching(true))\r\n    dispatch(actions.setCurrentPage(currentPage))\r\n    let data = await userAPI.getUsers(currentPage,pageSize)\r\n        dispatch(actions.toggleIsFetching(false))\r\n        dispatch(actions.setUsersAC(data.items));\r\n        dispatch(actions.setTotalUsersCount(data.totalCount));\r\n  }\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch:Dispatch<ActionsType>,userId:number,apiMethod:any,AC:(userId:number) => ActionsType ) => {\r\n  dispatch(actions.toggleFollowingProgress(true,userId));\r\n  let response = await apiMethod(userId)\r\n    if(response.data.resultCode === 0) {\r\n      dispatch(AC(userId));\r\n    }\r\n  dispatch(actions.toggleFollowingProgress(false,userId));\r\n}\r\n\r\nexport const follow = (userId:number):ThunkType => { \r\n  return async (dispatch) =>  {\r\n    _followUnfollowFlow(dispatch,userId,userAPI.follow.bind(userAPI),actions.acceptFollow);\r\n  }\r\n}\r\nexport const unfollow = (userId:number):ThunkType => { \r\n  return async (dispatch) =>  {\r\n    _followUnfollowFlow(dispatch,userId,userAPI.unfollow.bind(userAPI),actions.acceptUnfollow);\r\n  }\r\n}\r\nexport default usersReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}