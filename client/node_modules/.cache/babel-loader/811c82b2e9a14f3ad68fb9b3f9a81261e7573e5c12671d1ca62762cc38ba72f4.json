{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react\\\\project1\\\\src\\\\components\\\\users\\\\UsersContainer.tsx\";\nimport React from 'react';\nimport { follow, unfollow, getUsers } from '../../redux/users-reducer.ts';\nimport { connect } from 'react-redux';\nimport Users from './Users.tsx';\nimport Preloader from '../common/preloader/Preloader.jsx';\nimport { getUsersSuperSelector, getCurrentPage, getFolowingInProgress, getIsFetching, getTotalUsersCount, getPageSize } from '../../redux/users-selectors.ts';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.onPageChanged = pageNumber => {\n      let {\n        pageSize\n      } = this.props;\n      this.props.getUsers(pageNumber, pageSize);\n    };\n  }\n  componentDidMount() {\n    let {\n      currentPage,\n      pageSize\n    } = this.props;\n    this.props.getUsers(currentPage, pageSize);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        h: this.props.h,\n        folowingInProgress: this.props.folowingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\n/*\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users : state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage:state.usersPage.currentPage,\r\n        isFetching:state.usersPage.isFetching,\r\n        folowingInProgress:state.usersPage.folowingInProgress\r\n    }\r\n}\r\n*/\nlet mapStateToProps = state => {\n  return {\n    users: getUsersSuperSelector(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    folowingInProgress: getFolowingInProgress(state)\n  };\n};\nlet connector = connect(mapStateToProps, {\n  follow,\n  unfollow,\n  getUsers\n})(UsersContainer);","map":{"version":3,"names":["React","follow","unfollow","getUsers","connect","Users","Preloader","getUsersSuperSelector","getCurrentPage","getFolowingInProgress","getIsFetching","getTotalUsersCount","getPageSize","UsersContainer","Component","onPageChanged","pageNumber","pageSize","props","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","h","folowingInProgress","mapStateToProps","state","connector"],"sources":["C:/Dev/react/project1/src/components/users/UsersContainer.tsx"],"sourcesContent":["\r\nimport React from 'react';\r\nimport {follow,unfollow,setCurrentPage,toggleFollowingProgress,getUsers} from '../../redux/users-reducer.ts'\r\nimport {connect}  from 'react-redux'\r\nimport Users from './Users.tsx';\r\nimport Preloader from '../common/preloader/Preloader.jsx';\r\nimport {compose} from 'redux'\r\nimport {UserType} from './../../types/types.js'\r\nimport {getUsersSuperSelector,getCurrentPage,getFolowingInProgress,getIsFetching,getTotalUsersCount,getPageSize} from '../../redux/users-selectors.ts'\r\nimport { AppStateType } from '../../redux/redux-store.js';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    currentPage:number\r\n    pageSize:number\r\n    isFetching:boolean\r\n    totalUsersCount:number\r\n    folowingInProgress:Array<number>\r\n    users:Array<UserType>\r\n}\r\ntype MapDispatchToPropsType = {\r\n    unfollow:(userId:number) => void\r\n    follow:(userId:number) => void\r\n    getUsers:(currentPage:number,pageSize:number) => void\r\n}\r\n\r\ntype OwnPropsType= {\r\n    h:string\r\n}\r\ntype PropsType = MapDispatchToPropsType & MapStateToPropsType & OwnPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        let {currentPage,pageSize} = this.props\r\n        this.props.getUsers(currentPage,pageSize);\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize} = this.props\r\n        this.props.getUsers(pageNumber,pageSize);\r\n    }\r\n    render() {\r\n\r\n        return <>\r\n        {this.props.isFetching?<Preloader/>:null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                h={this.props.h}\r\n                folowingInProgress={this.props.folowingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n/*\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users : state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage:state.usersPage.currentPage,\r\n        isFetching:state.usersPage.isFetching,\r\n        folowingInProgress:state.usersPage.folowingInProgress\r\n    }\r\n}\r\n*/\r\nlet mapStateToProps = (state:AppStateType):MapStateToPropsType => {\r\n    return {\r\n        users : getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        folowingInProgress: getFolowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nlet connector = connect<MapStateToPropsType,MapDispatchToPropsType,OwnPropsType>(mapStateToProps,{follow,unfollow,getUsers})(UsersContainer)"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,EAACC,QAAQ,EAAwCC,QAAQ,QAAO,8BAA8B;AAC5G,SAAQC,OAAO,QAAQ,aAAa;AACpC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,SAAS,MAAM,mCAAmC;AAGzD,SAAQC,qBAAqB,EAACC,cAAc,EAACC,qBAAqB,EAACC,aAAa,EAACC,kBAAkB,EAACC,WAAW,QAAO,gCAAgC;AAAA;AAAA;AAuBtJ,MAAMC,cAAc,SAASb,KAAK,CAACc,SAAS,CAAY;EAAA;IAAA;IAAA,KAKpDC,aAAa,GAAIC,UAAU,IAAK;MAC5B,IAAI;QAACC;MAAQ,CAAC,GAAG,IAAI,CAACC,KAAK;MAC3B,IAAI,CAACA,KAAK,CAACf,QAAQ,CAACa,UAAU,EAACC,QAAQ,CAAC;IAC5C,CAAC;EAAA;EAPDE,iBAAiB,GAAG;IAChB,IAAI;MAACC,WAAW;MAACH;IAAQ,CAAC,GAAG,IAAI,CAACC,KAAK;IACvC,IAAI,CAACA,KAAK,CAACf,QAAQ,CAACiB,WAAW,EAACH,QAAQ,CAAC;EAC7C;EAKAI,MAAM,GAAG;IAEL,oBAAO;MAAA,WACN,IAAI,CAACH,KAAK,CAACI,UAAU,gBAAC,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAE,GAAC,IAAI,eACpC,QAAC,KAAK;QACF,eAAe,EAAE,IAAI,CAACJ,KAAK,CAACK,eAAgB;QAC5C,QAAQ,EAAE,IAAI,CAACL,KAAK,CAACD,QAAS;QAC9B,WAAW,EAAE,IAAI,CAACC,KAAK,CAACE,WAAY;QACpC,aAAa,EAAE,IAAI,CAACL,aAAc;QAClC,KAAK,EAAE,IAAI,CAACG,KAAK,CAACM,KAAM;QACxB,MAAM,EAAE,IAAI,CAACN,KAAK,CAACjB,MAAO;QAC1B,QAAQ,EAAE,IAAI,CAACiB,KAAK,CAAChB,QAAS;QAC9B,CAAC,EAAE,IAAI,CAACgB,KAAK,CAACO,CAAE;QAChB,kBAAkB,EAAE,IAAI,CAACP,KAAK,CAACQ;MAAmB;QAAA;QAAA;QAAA;MAAA,QACpD;IAAA,gBACH;EACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,eAAe,GAAIC,KAAkB,IAAyB;EAC9D,OAAO;IACHJ,KAAK,EAAGjB,qBAAqB,CAACqB,KAAK,CAAC;IACpCX,QAAQ,EAAEL,WAAW,CAACgB,KAAK,CAAC;IAC5BL,eAAe,EAAEZ,kBAAkB,CAACiB,KAAK,CAAC;IAC1CR,WAAW,EAAEZ,cAAc,CAACoB,KAAK,CAAC;IAClCN,UAAU,EAAEZ,aAAa,CAACkB,KAAK,CAAC;IAChCF,kBAAkB,EAAEjB,qBAAqB,CAACmB,KAAK;EACnD,CAAC;AACL,CAAC;AAGD,IAAIC,SAAS,GAAGzB,OAAO,CAA0DuB,eAAe,EAAC;EAAC1B,MAAM;EAACC,QAAQ;EAACC;AAAQ,CAAC,CAAC,CAACU,cAAc,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}