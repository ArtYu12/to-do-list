{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react\\\\Schedule for the day\\\\client\\\\src\\\\components\\\\planPage\\\\planPageComponents\\\\List.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './List.module.css';\nimport TodosList from './TodosList.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const options = {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  };\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todos, setTodos] = useState([]);\n  const addTodo = event => {\n    if (event.key === 'Enter') {\n      let newId;\n      if (!todos[todos.length - 1]) {\n        newId = 1;\n      } else {\n        newId = todos[todos.length - 1].id + 1;\n      }\n      setTodos([...todos, {\n        id: newId,\n        title: todoTitle,\n        data: new Date().toLocaleDateString(\"en-KZ\", options),\n        completed: false\n      }]);\n      setTodoTitle('');\n    }\n  };\n  useEffect(() => {\n    const row = localStorage.getItem('todos') || [] / setTodos(JSON.parse(row));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.list,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Create new part of your list\",\n        value: todoTitle,\n        onChange: event => setTodoTitle(event.target.value),\n        className: styles.searchInput + \" \" + styles.inputs,\n        onKeyDown: event => addTodo(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: styles.submit + \" \" + styles.inputs,\n        value: \"ADD\",\n        onClick: event => addTodo(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodosList, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(List, \"1xHfj1ygwpyyky8pNncxTnndgZU=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","styles","TodosList","List","options","weekday","year","month","day","todoTitle","setTodoTitle","todos","setTodos","addTodo","event","key","newId","length","id","title","data","Date","toLocaleDateString","completed","row","localStorage","getItem","JSON","parse","setItem","stringify","list","form","target","value","searchInput","inputs","submit"],"sources":["C:/Dev/react/Schedule for the day/client/src/components/planPage/planPageComponents/List.tsx"],"sourcesContent":["import React, { useState ,useEffect} from 'react'\r\nimport styles from './List.module.css'\r\nimport SearchInput from './SearchInput.tsx'\r\nimport TodosList from './TodosList.tsx'\r\n\r\nexport type Todo = {\r\n    id:number\r\n    title:string\r\n    data:string\r\n    completed:boolean\r\n}\r\nconst List = () => {\r\n    const options = {\r\n        weekday: \"long\",\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n    };\r\n    const [todoTitle,setTodoTitle] = useState('')\r\n    const [todos,setTodos] = useState([] as Array<Todo>)\r\n    const addTodo = (event) => {\r\n        if(event.key === 'Enter') {\r\n            let newId:number;\r\n            if(!todos[todos.length - 1]) {\r\n                newId = 1\r\n            } else {\r\n                newId = (todos[todos.length - 1].id + 1)\r\n            }\r\n            setTodos([\r\n                ...todos,\r\n                {\r\n                    id:newId,\r\n                    title:todoTitle,\r\n                    data:new Date().toLocaleDateString(\"en-KZ\",options),\r\n                    completed:false\r\n                }\r\n            ])\r\n            setTodoTitle('')\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        const row = localStorage.getItem('todos') || []\r\n        /\r\n        setTodos(JSON.parse(row))\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos',JSON.stringify(todos))\r\n    },[todos])\r\n\r\n\r\n    return(\r\n        <div className={styles.list}>\r\n            <div className={styles.form}>\r\n                <input type=\"text\" \r\n                    placeholder=\"Create new part of your list\" \r\n                    value={todoTitle} \r\n                    onChange={(event) => setTodoTitle(event.target.value)} \r\n                    className={styles.searchInput+\" \"+styles.inputs}\r\n                    onKeyDown={event => addTodo(event)}\r\n                    />\r\n                <input \r\n                    type=\"submit\" \r\n                    className={styles.submit+\" \"+styles.inputs} \r\n                    value=\"ADD\" \r\n                    onClick={event => addTodo(event)}\r\n                    />\r\n            </div>\r\n            <TodosList todos={todos}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,OAAOC,SAAS,MAAM,iBAAiB;AAAA;AAQvC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAMC,OAAO,GAAG;IACZC,OAAO,EAAE,MAAM;IACfC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE;EACT,CAAC;EACD,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACY,KAAK,EAACC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAgB;EACpD,MAAMc,OAAO,GAAIC,KAAK,IAAK;IACvB,IAAGA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACtB,IAAIC,KAAY;MAChB,IAAG,CAACL,KAAK,CAACA,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC,EAAE;QACzBD,KAAK,GAAG,CAAC;MACb,CAAC,MAAM;QACHA,KAAK,GAAIL,KAAK,CAACA,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC,CAACC,EAAE,GAAG,CAAE;MAC5C;MACAN,QAAQ,CAAC,CACL,GAAGD,KAAK,EACR;QACIO,EAAE,EAACF,KAAK;QACRG,KAAK,EAACV,SAAS;QACfW,IAAI,EAAC,IAAIC,IAAI,EAAE,CAACC,kBAAkB,CAAC,OAAO,EAAClB,OAAO,CAAC;QACnDmB,SAAS,EAAC;MACd,CAAC,CACJ,CAAC;MACFb,YAAY,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC;EACDV,SAAS,CAAC,MAAM;IACZ,MAAMwB,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,GAE/Cd,QAAQ,CAACe,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,CAAC;EAC7B,CAAC,EAAC,EAAE,CAAC;EAELxB,SAAS,CAAC,MAAM;IACZyB,YAAY,CAACI,OAAO,CAAC,OAAO,EAACF,IAAI,CAACG,SAAS,CAACnB,KAAK,CAAC,CAAC;EACvD,CAAC,EAAC,CAACA,KAAK,CAAC,CAAC;EAGV,oBACI;IAAK,SAAS,EAAEV,MAAM,CAAC8B,IAAK;IAAA,wBACxB;MAAK,SAAS,EAAE9B,MAAM,CAAC+B,IAAK;MAAA,wBACxB;QAAO,IAAI,EAAC,MAAM;QACd,WAAW,EAAC,8BAA8B;QAC1C,KAAK,EAAEvB,SAAU;QACjB,QAAQ,EAAGK,KAAK,IAAKJ,YAAY,CAACI,KAAK,CAACmB,MAAM,CAACC,KAAK,CAAE;QACtD,SAAS,EAAEjC,MAAM,CAACkC,WAAW,GAAC,GAAG,GAAClC,MAAM,CAACmC,MAAO;QAChD,SAAS,EAAEtB,KAAK,IAAID,OAAO,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACjC,eACN;QACI,IAAI,EAAC,QAAQ;QACb,SAAS,EAAEb,MAAM,CAACoC,MAAM,GAAC,GAAG,GAACpC,MAAM,CAACmC,MAAO;QAC3C,KAAK,EAAC,KAAK;QACX,OAAO,EAAEtB,KAAK,IAAID,OAAO,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC/B;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN,QAAC,SAAS;MAAC,KAAK,EAAEH;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACxB;AAEd,CAAC;AAAA,GA5DKR,IAAI;AAAA,KAAJA,IAAI;AA8DV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}